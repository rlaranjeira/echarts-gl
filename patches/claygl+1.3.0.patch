diff --git a/node_modules/claygl/dist/claygl.es.js b/node_modules/claygl/dist/claygl.es.js
index eeeb004..4d6df7b 100644
--- a/node_modules/claygl/dist/claygl.es.js
+++ b/node_modules/claygl/dist/claygl.es.js
@@ -10666,7 +10666,7 @@ function PlaceHolderTexture(renderer) {
     this.bind = function (renderer) {
         if (!blankCanvas) {
             // TODO Environment not support createCanvas.
-            blankCanvas = vendor.createCanvas();
+            blankCanvas = document.createElement("canvas");
             blankCanvas.width = blankCanvas.height = 1;
             blankCanvas.getContext('2d');
         }
@@ -35801,4 +35801,8 @@ var vr = {
     StereoCamera : StereoCamera
 };
 
-export { animation, application, async, Camera, camera, compositor, core, createCompositor, deferred, dep, FrameBuffer, Geometry, geometry, GeometryBase, InstancedMesh, Joint, Light, light, loader, Material, math, BoundingBox, Frustum, Matrix2, Matrix2d, Matrix3, Matrix4, Plane$1 as Plane, Quaternion, Ray, Value, Vector2, Vector3, Vector4, Mesh, Node, particle, picking, plugin, prePass, Renderable, Renderer, Scene, Shader, shader, Skeleton, StandardMaterial, StaticGeometry, Texture, Texture2D, TextureCube, Timeline, util, version, vr };
+function setCanvasCreator(creator) {
+    vendor.createCanvas = creator;
+}
+
+export { animation, application, async, Camera, camera, compositor, core, createCompositor, deferred, dep, FrameBuffer, Geometry, geometry, GeometryBase, InstancedMesh, Joint, Light, light, loader, Material, math, BoundingBox, Frustum, Matrix2, Matrix2d, Matrix3, Matrix4, Plane$1 as Plane, Quaternion, Ray, Value, Vector2, Vector3, Vector4, Mesh, Node, particle, picking, plugin, prePass, Renderable, Renderer, Scene, Shader, shader, Skeleton, StandardMaterial, StaticGeometry, Texture, Texture2D, TextureCube, Timeline, util, version, vr, setCanvasCreator };
diff --git a/node_modules/claygl/dist/claygl.js b/node_modules/claygl/dist/claygl.js
index b908028..a907668 100644
--- a/node_modules/claygl/dist/claygl.js
+++ b/node_modules/claygl/dist/claygl.js
@@ -10672,7 +10672,7 @@ function PlaceHolderTexture(renderer) {
     this.bind = function (renderer) {
         if (!blankCanvas) {
             // TODO Environment not support createCanvas.
-            blankCanvas = vendor.createCanvas();
+            blankCanvas = document.createElement("canvas");
             blankCanvas.width = blankCanvas.height = 1;
             blankCanvas.getContext('2d');
         }
@@ -35807,6 +35807,10 @@ var vr = {
     StereoCamera : StereoCamera
 };
 
+function setCanvasCreator(creator) {
+    vendor.createCanvas = creator;
+}
+
 exports.animation = animation;
 exports.application = application;
 exports.async = async;
@@ -35862,6 +35866,7 @@ exports.Timeline = Timeline;
 exports.util = util;
 exports.version = version;
 exports.vr = vr;
+exports.setCanvasCreator = setCanvasCreator;
 
 Object.defineProperty(exports, '__esModule', { value: true });
 
diff --git a/node_modules/claygl/dist/claygl.min.js b/node_modules/claygl/dist/claygl.min.js
index 69f7f33..1e7629e 100644
--- a/node_modules/claygl/dist/claygl.min.js
+++ b/node_modules/claygl/dist/claygl.min.js
@@ -11,4 +11,4 @@ D[1]=Math.min(D[1],1),n.ortho(O[0],D[0],O[1],D[1],1,-1),y.projectionMatrix.multi
 }),qi="@export clay.compositor.coloradjust\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n float luminance = dot( color, w );\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = tex.rgb + vec3(brightness);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float contrast : 1.0;\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float exposure : 0.0;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb * pow(2.0, exposure);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float gamma : 1.0;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = pow(tex.rgb, vec3(gamma));\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb;\n float luminance = dot(color, w);\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end",Yi="@export clay.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n@export clay.compositor.kernel.gaussian_13\nfloat gaussianKernel[13];\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n@end\n@export clay.compositor.gaussian_blur\n#define SHADER_NAME gaussian_blur\nuniform sampler2D texture;varying vec2 v_Texcoord;\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n@import clay.util.rgbm\n@import clay.util.clamp_sample\nvoid main (void)\n{\n @import clay.compositor.kernel.gaussian_9\n vec2 off = blurSize / textureSize;\n off *= vec2(1.0 - blurDir, blurDir);\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n for (int i = 0; i < 9; i++) {\n float w = gaussianKernel[i];\n vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\n sum += texel * w;\n weightAll += w;\n }\n gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\n}\n@end\n",Ki="@export clay.compositor.hdr.log_lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n float luminance = dot(tex.rgb, w);\n luminance = log(luminance + 0.001);\n gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n@end\n@export clay.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\nuniform float frameTime : 0.02;\n@import clay.util.rgbm\nvoid main()\n{\n float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n@export clay.compositor.lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord );\n float luminance = dot(tex.rgb, w);\n gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n@end",Zi="\n@export clay.compositor.lut\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform sampler2D lookup;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n float blueColor = tex.b * 63.0;\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n vec4 newColor1 = texture2D(lookup, texPos1);\n vec4 newColor2 = texture2D(lookup, texPos2);\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n@end",Ji="@export clay.compositor.vignette\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float darkness: 1;\nuniform float offset: 1;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n gl_FragColor.rgb = texel.rgb;\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\n gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\n}\n@end",Qi="@export clay.compositor.output\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n gl_FragColor.rgb = tex.rgb;\n#ifdef OUTPUT_ALPHA\n gl_FragColor.a = tex.a;\n#else\n gl_FragColor.a = 1.0;\n#endif\n gl_FragColor = encodeHDR(gl_FragColor);\n#ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end",$i="@export clay.compositor.bright\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\nuniform vec2 textureSize: [512, 512];\nvarying vec2 v_Texcoord;\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n@import clay.util.rgbm\nvec4 median(vec4 a, vec4 b, vec4 c)\n{\n return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n#ifdef ANTI_FLICKER\n vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\n vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\n vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\n vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\n texel = median(median(texel, s1, s2), s3, s4);\n#endif\n float lum = dot(texel.rgb , lumWeight);\n vec4 color;\n if (lum > threshold && texel.a > 0.0)\n {\n color = vec4(texel.rgb * scale, texel.a * scale);\n }\n else\n {\n color = vec4(0.0);\n }\n gl_FragColor = encodeHDR(color);\n}\n@end\n",ta="@export clay.compositor.downsample\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nfloat brightness(vec3 c)\n{\n return max(max(c.r, c.g), c.b);\n}\n@import clay.util.clamp_sample\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n#ifdef ANTI_FLICKER\n vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n float s1w = 1.0 / (brightness(s1) + 1.0);\n float s2w = 1.0 / (brightness(s2) + 1.0);\n float s3w = 1.0 / (brightness(s3) + 1.0);\n float s4w = 1.0 / (brightness(s4) + 1.0);\n float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n vec4 color = vec4(\n (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n 1.0\n );\n#else\n vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n color *= 0.25;\n#endif\n gl_FragColor = encodeHDR(color);\n}\n@end",ea="\n@export clay.compositor.upsample\n#define HIGH_QUALITY\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.clamp_sample\nvoid main()\n{\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord )) * 4.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n gl_FragColor = encodeHDR(s / 16.0);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n@end",ra="@export clay.compositor.hdr.composite\n#define TONEMAPPING\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n#ifdef COLOR_CORRECTION\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float saturation : 1.0;\n#endif\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\nvarying vec2 v_Texcoord;\n@import clay.util.srgb\nvec3 ACESToneMapping(vec3 color)\n{\n const float A = 2.51;\n const float B = 0.03;\n const float C = 2.43;\n const float D = 0.59;\n const float E = 0.14;\n return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nfloat eyeAdaption(float fLum)\n{\n return mix(0.2, fLum, 0.5);\n}\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n float blueColor = color.b * 63.0;\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n vec4 newColor1 = texture2D(lut, texPos1);\n vec4 newColor2 = texture2D(lut, texPos2);\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n return newColor.rgb;\n}\n#endif\n@import clay.util.rgbm\nvoid main()\n{\n vec4 texel = vec4(0.0);\n vec4 originalTexel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n texel = decodeHDR(texture2D(texture, v_Texcoord));\n originalTexel = texel;\n#endif\n#ifdef BLOOM_ENABLED\n vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\n texel.rgb += bloomTexel.rgb * bloomIntensity;\n texel.a += bloomTexel.a * bloomIntensity;\n#endif\n#ifdef LENSFLARE_ENABLED\n texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n texel.a = min(texel.a, 1.0);\n#ifdef LUM_ENABLED\n float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n float exposureBias = adaptedLumDest * exposure;\n#else\n float exposureBias = exposure;\n#endif\n#ifdef TONEMAPPING\n texel.rgb *= exposureBias;\n texel.rgb = ACESToneMapping(texel.rgb);\n#endif\n texel = linearTosRGB(texel);\n#ifdef LUT_ENABLED\n texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n#ifdef COLOR_CORRECTION\n texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\n texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\n texel.rgb = mix(vec3(lum), texel.rgb, saturation);\n#endif\n#ifdef VIGNETTE\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n gl_FragColor = encodeHDR(texel);\n#ifdef DEBUG\n #if DEBUG == 1\n gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n #elif DEBUG == 2\n gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\n #elif DEBUG == 3\n gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\n #endif\n#endif\n if (originalTexel.a <= 0.01 && gl_FragColor.a > 1e-5) {\n gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\n }\n#ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end",na="@export clay.compositor.lensflare\n#define SAMPLE_NUMBER 8\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\nuniform vec2 textureSize : [512, 512];\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nvec4 textureDistorted(\n in vec2 texcoord,\n in vec2 direction,\n in vec3 distortion\n) {\n return vec4(\n decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n 1.0\n );\n}\nvoid main()\n{\n vec2 texcoord = -v_Texcoord + vec2(1.0); vec2 textureOffset = 1.0 / textureSize;\n vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n vec2 haloVec = normalize(ghostVec) * haloWidth;\n vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n vec4 result = vec4(0.0);\n for (int i = 0; i < SAMPLE_NUMBER; i++)\n {\n vec2 offset = fract(texcoord + ghostVec * float(i));\n float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n }\n result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n vec2 offset = fract(texcoord + haloVec);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n gl_FragColor = result;\n}\n@end",ia="@export clay.compositor.blend\n#define SHADER_NAME blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n gl_FragColor = encodeHDR(tex);\n}\n@end",aa="@export clay.compositor.fxaa\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nvarying vec2 v_Texcoord;\n#define FXAA_REDUCE_MIN (1.0/128.0)\n#define FXAA_REDUCE_MUL (1.0/8.0)\n#define FXAA_SPAN_MAX 8.0\n@import clay.util.rgbm\nvoid main()\n{\n vec2 resolution = 1.0 / viewport.zw;\n vec3 rgbNW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n vec4 rgbaM = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution ) );\n vec3 rgbM = rgbaM.xyz;\n float opacity = rgbaM.w;\n vec3 luma = vec3( 0.299, 0.587, 0.114 );\n float lumaNW = dot( rgbNW, luma );\n float lumaNE = dot( rgbNE, luma );\n float lumaSW = dot( rgbSW, luma );\n float lumaSE = dot( rgbSE, luma );\n float lumaM = dot( rgbM, luma );\n float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n vec2 dir;\n dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n dir * rcpDirMin)) * resolution;\n vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA *= 0.5;\n vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * -0.5 ) ).xyz;\n rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * 0.5 ) ).xyz;\n rgbB *= 0.25;\n rgbB += rgbA * 0.5;\n float lumaB = dot( rgbB, luma );\n if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n {\n gl_FragColor = vec4( rgbA, opacity );\n }\n else {\n gl_FragColor = vec4( rgbB, opacity );\n }\n}\n@end";Yt(Q);var oa=/^#source\((.*?)\)/;Q.import("@export clay.deferred.gbuffer.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n#if defined(SECOND_PASS) || defined(FIRST_PASS)\nattribute vec2 texcoord : TEXCOORD_0;\nuniform vec2 uvRepeat;\nuniform vec2 uvOffset;\nvarying vec2 v_Texcoord;\n#endif\n#ifdef FIRST_PASS\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nvarying vec3 v_Normal;\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nvarying vec3 v_WorldPosition;\n#endif\n@import clay.chunk.skinning_header\n#ifdef THIRD_PASS\nuniform mat4 prevWorldViewProjection;\nvarying vec4 v_ViewPosition;\nvarying vec4 v_PrevViewPosition;\n#ifdef SKINNING\n#ifdef USE_SKIN_MATRICES_TEXTURE\nuniform sampler2D prevSkinMatricesTexture;\nmat4 getPrevSkinMatrix(float idx) {\n return getSkinMatrix(prevSkinMatricesTexture, idx);\n}\n#else\nuniform mat4 prevSkinMatrix[JOINT_COUNT];\nmat4 getPrevSkinMatrix(float idx) {\n return prevSkinMatrix[int(idx)];\n}\n#endif\n#endif\n#endif\nvoid main()\n{\n vec3 skinnedPosition = position;\n vec3 prevSkinnedPosition = position;\n#ifdef FIRST_PASS\n vec3 skinnedNormal = normal;\n vec3 skinnedTangent = tangent.xyz;\n bool hasTangent = dot(tangent, tangent) > 0.0;\n#endif\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n #ifdef FIRST_PASS\n skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n if (hasTangent) {\n skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n }\n #endif\n #ifdef THIRD_PASS\n {\n mat4 prevSkinMatrixWS = getPrevSkinMatrix(joint.x) * weight.x;\n if (weight.y > 1e-4) { prevSkinMatrixWS += getPrevSkinMatrix(joint.y) * weight.y; }\n if (weight.z > 1e-4) { prevSkinMatrixWS += getPrevSkinMatrix(joint.z) * weight.z; }\n float weightW = 1.0-weight.x-weight.y-weight.z;\n if (weightW > 1e-4) { prevSkinMatrixWS += getPrevSkinMatrix(joint.w) * weightW; }\n prevSkinnedPosition = (prevSkinMatrixWS * vec4(position, 1.0)).xyz;\n }\n #endif\n#endif\n#if defined(SECOND_PASS) || defined(FIRST_PASS)\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n#endif\n#ifdef FIRST_PASS\n v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n if (hasTangent) {\n v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n }\n v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n#endif\n#ifdef THIRD_PASS\n v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n v_PrevViewPosition = prevWorldViewProjection * vec4(prevSkinnedPosition, 1.0);\n#endif\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@export clay.deferred.gbuffer1.fragment\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform float glossiness;\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nuniform sampler2D normalMap;\nuniform sampler2D diffuseMap;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nuniform sampler2D roughGlossMap;\nuniform bool useRoughGlossMap;\nuniform bool useRoughness;\nuniform bool doubleSided;\nuniform float alphaCutoff: 0.0;\nuniform float alpha: 1.0;\nuniform int roughGlossChannel: 0;\nfloat indexingTexel(in vec4 texel, in int idx) {\n if (idx == 3) return texel.a;\n else if (idx == 1) return texel.g;\n else if (idx == 2) return texel.b;\n else return texel.r;\n}\nvoid main()\n{\n vec3 N = v_Normal;\n if (doubleSided) {\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = eyePos - v_WorldPosition;\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n }\n if (alphaCutoff > 0.0) {\n float a = texture2D(diffuseMap, v_Texcoord).a * alpha;\n if (a < alphaCutoff) {\n discard;\n }\n }\n if (dot(v_Tangent, v_Tangent) > 0.0) {\n vec3 normalTexel = texture2D(normalMap, v_Texcoord).xyz;\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n N = normalize(tbn * N);\n }\n }\n gl_FragColor.rgb = (N + 1.0) * 0.5;\n float g = glossiness;\n if (useRoughGlossMap) {\n float g2 = indexingTexel(texture2D(roughGlossMap, v_Texcoord), roughGlossChannel);\n if (useRoughness) {\n g2 = 1.0 - g2;\n }\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n }\n gl_FragColor.a = g + 0.005;\n}\n@end\n@export clay.deferred.gbuffer2.fragment\nuniform sampler2D diffuseMap;\nuniform sampler2D metalnessMap;\nuniform vec3 color;\nuniform float metalness;\nuniform bool useMetalnessMap;\nuniform bool linear;\nuniform float alphaCutoff: 0.0;\nuniform float alpha: 1.0;\nvarying vec2 v_Texcoord;\n@import clay.util.srgb\nvoid main()\n{\n float m = metalness;\n if (useMetalnessMap) {\n vec4 metalnessTexel = texture2D(metalnessMap, v_Texcoord);\n m = clamp(metalnessTexel.r + (m * 2.0 - 1.0), 0.0, 1.0);\n }\n vec4 texel = texture2D(diffuseMap, v_Texcoord);\n if (linear) {\n texel = sRGBToLinear(texel);\n }\n if (alphaCutoff > 0.0) {\n float a = texel.a * alpha;\n if (a < alphaCutoff) {\n discard;\n }\n }\n gl_FragColor.rgb = texel.rgb * color;\n gl_FragColor.a = m + 0.005;\n}\n@end\n@export clay.deferred.gbuffer3.fragment\nuniform bool firstRender;\nvarying vec4 v_ViewPosition;\nvarying vec4 v_PrevViewPosition;\nvoid main()\n{\n vec2 a = v_ViewPosition.xy / v_ViewPosition.w;\n vec2 b = v_PrevViewPosition.xy / v_PrevViewPosition.w;\n if (firstRender) {\n gl_FragColor = vec4(0.0);\n }\n else {\n gl_FragColor = vec4((a - b) * 0.5 + 0.5, 0.0, 1.0);\n }\n}\n@end\n@export clay.deferred.gbuffer.debug\n@import clay.deferred.chunk.light_head\nuniform sampler2D gBufferTexture4;\nuniform int debug: 0;\nvoid main ()\n{\n @import clay.deferred.chunk.gbuffer_read\n if (debug == 0) {\n gl_FragColor = vec4(N, 1.0);\n }\n else if (debug == 1) {\n gl_FragColor = vec4(vec3(z), 1.0);\n }\n else if (debug == 2) {\n gl_FragColor = vec4(position, 1.0);\n }\n else if (debug == 3) {\n gl_FragColor = vec4(vec3(glossiness), 1.0);\n }\n else if (debug == 4) {\n gl_FragColor = vec4(vec3(metalness), 1.0);\n }\n else if (debug == 5) {\n gl_FragColor = vec4(albedo, 1.0);\n }\n else {\n vec4 color = texture2D(gBufferTexture4, uv);\n color.rg -= 0.5;\n color.rg *= 2.0;\n gl_FragColor = color;\n }\n}\n@end"),Q.import("@export clay.deferred.chunk.light_head\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform sampler2D gBufferTexture3;\nuniform vec2 windowSize: WINDOW_SIZE;\nuniform vec4 viewport: VIEWPORT;\nuniform mat4 viewProjectionInv;\n#ifdef DEPTH_ENCODED\n@import clay.util.decode_float\n#endif\n@end\n@export clay.deferred.chunk.gbuffer_read\n vec2 uv = gl_FragCoord.xy / windowSize;\n vec2 uv2 = (gl_FragCoord.xy - viewport.xy) / viewport.zw;\n vec4 texel1 = texture2D(gBufferTexture1, uv);\n vec4 texel3 = texture2D(gBufferTexture3, uv);\n if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n float glossiness = texel1.a;\n float metalness = texel3.a;\n vec3 N = texel1.rgb * 2.0 - 1.0;\n float z = texture2D(gBufferTexture2, uv).r * 2.0 - 1.0;\n vec2 xy = uv2 * 2.0 - 1.0;\n vec4 projectedPos = vec4(xy, z, 1.0);\n vec4 p4 = viewProjectionInv * projectedPos;\n vec3 position = p4.xyz / p4.w;\n vec3 albedo = texel3.rgb;\n vec3 diffuseColor = albedo * (1.0 - metalness);\n vec3 specularColor = mix(vec3(0.04), albedo, metalness);\n@end\n@export clay.deferred.chunk.light_equation\nfloat D_Phong(in float g, in float ndh) {\n float a = pow(8192.0, g);\n return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(in float g, in float ndh) {\n float r = 1.0 - g;\n float a = r * r;\n float tmp = ndh * ndh * (a - 1.0) + 1.0;\n return a / (3.1415926 * tmp * tmp);\n}\nvec3 F_Schlick(in float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nvec3 lightEquation(\n in vec3 lightColor, in vec3 diffuseColor, in vec3 specularColor,\n in float ndl, in float ndh, in float ndv, in float g\n)\n{\n return ndl * lightColor\n * (diffuseColor + D_Phong(g, ndh) * F_Schlick(ndv, specularColor));\n}\n@end");var sa=ke.extend(function(){var t={minFilter:Tn.NEAREST,magFilter:Tn.NEAREST,wrapS:Tn.CLAMP_TO_EDGE,wrapT:Tn.CLAMP_TO_EDGE};return{enableTargetTexture1:!0,enableTargetTexture2:!0,enableTargetTexture3:!0,enableTargetTexture4:!1,renderTransparent:!1,_gBufferRenderList:[],_gBufferTex1:new An(Object.assign({type:Tn.HALF_FLOAT},t)),_gBufferTex2:new An(Object.assign({format:Tn.DEPTH_STENCIL,type:Tn.UNSIGNED_INT_24_8_WEBGL},t)),_gBufferTex3:new An(t),_gBufferTex4:new An(Object.assign({type:Tn.HALF_FLOAT},t)),_defaultNormalMap:new An({image:ie("#000")}),_defaultRoughnessMap:new An({image:ie("#fff")}),_defaultMetalnessMap:new An({image:ie("#fff")}),_defaultDiffuseMap:new An({image:ie("#fff")}),_frameBuffer:new oi,_gBufferMaterial1:new nr({shader:new Q(Q.source("clay.deferred.gbuffer.vertex"),Q.source("clay.deferred.gbuffer1.fragment")),vertexDefines:{FIRST_PASS:null},fragmentDefines:{FIRST_PASS:null}}),_gBufferMaterial2:new nr({shader:new Q(Q.source("clay.deferred.gbuffer.vertex"),Q.source("clay.deferred.gbuffer2.fragment")),vertexDefines:{SECOND_PASS:null},fragmentDefines:{SECOND_PASS:null}}),_gBufferMaterial3:new nr({shader:new Q(Q.source("clay.deferred.gbuffer.vertex"),Q.source("clay.deferred.gbuffer3.fragment")),vertexDefines:{THIRD_PASS:null},fragmentDefines:{THIRD_PASS:null}}),_debugPass:new hi({fragment:Q.source("clay.deferred.gbuffer.debug")})}},{resize:function(t,e){this._gBufferTex1.width===t&&this._gBufferTex1.height===e||(this._gBufferTex1.width=t,this._gBufferTex1.height=e,this._gBufferTex2.width=t,this._gBufferTex2.height=e,this._gBufferTex3.width=t,this._gBufferTex3.height=e,this._gBufferTex4.width=t,this._gBufferTex4.height=e)},setViewport:function(t,e,r,n,i){var a;a="object"==typeof t?t:{x:t,y:e,width:r,height:n,devicePixelRatio:i||1},this._frameBuffer.viewport=a},getViewport:function(){return this._frameBuffer.viewport?this._frameBuffer.viewport:{x:0,y:0,width:this._gBufferTex1.width,height:this._gBufferTex1.height,devicePixelRatio:1}},update:function(t,e,r,n){function i(){if(u){var t=u.devicePixelRatio;o.enable(o.SCISSOR_TEST),o.scissor(u.x*t,u.y*t,u.width*t,u.height*t)}o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT),u&&o.disable(o.SCISSOR_TEST)}function a(t,e){return t.material!==e.material}n=n||{};for(var o=t.gl,s=this._frameBuffer,u=s.viewport,l=e.updateRenderList(r,!0),h=l.opaque,c=l.transparent,f=0,d=this._gBufferRenderList,p=0;p<h.length;p++)h[p].ignoreGBuffer||(d[f++]=h[p]);if(this.renderTransparent)for(var p=0;p<c.length;p++)c[p].ignoreGBuffer||(d[f++]=c[p]);d.length=f,o.clearColor(0,0,0,0),o.depthMask(!0),o.colorMask(!0,!0,!0,!0),o.disable(o.BLEND);var m=this.enableTargetTexture1,_=this.enableTargetTexture2,g=this.enableTargetTexture3,v=this.enableTargetTexture4;if(m||g||v||(console.warn("Can't disable targetTexture1, targetTexture3, targetTexture4 both"),m=!0),_&&s.attach(n.targetTexture2||this._gBufferTex2,t.gl.DEPTH_STENCIL_ATTACHMENT),t.bindSceneRendering(e),m){s.attach(n.targetTexture1||this._gBufferTex1),s.bind(t),i();var y=this._gBufferMaterial1,T={getMaterial:function(){return y},getUniform:ae(this._defaultNormalMap,this._defaultRoughnessMap,this._defaultDiffuseMap),isMaterialChanged:a,sortCompare:t.opaqueSortCompare};t.renderPass(d,r,T)}if(g){s.attach(n.targetTexture3||this._gBufferTex3),s.bind(t),i();var x=this._gBufferMaterial2,T={getMaterial:function(){return x},getUniform:oe(this._defaultDiffuseMap,this._defaultMetalnessMap),isMaterialChanged:a,sortCompare:t.opaqueSortCompare};t.renderPass(d,r,T)}if(v){s.bind(t),s.attach(n.targetTexture4||this._gBufferTex4),i(),r.update();var E=this._gBufferMaterial3,A=Er.create();Er.multiply(A,r.projectionMatrix.array,r.viewMatrix.array);var T={getMaterial:function(){return E},afterRender:function(t,e){var r=e.isSkinnedMesh();if(r){var n=e.skeleton,i=e.joints;if(i.length>t.getMaxJointNumber()){var a=n.getSubSkinMatricesTexture(e.__uid__,i),o=e.__prevSkinMatricesTexture;if(o||(o=e.__prevSkinMatricesTexture=new An({type:Tn.FLOAT,minFilter:Tn.NEAREST,magFilter:Tn.NEAREST,useMipmap:!1,flipY:!1})),o.pixels&&o.pixels.length===a.pixels.length)for(var s=0;s<a.pixels.length;s++)o.pixels[s]=a.pixels[s];else o.pixels=new Float32Array(a.pixels);o.width=a.width,o.height=a.height}else{var u=n.getSubSkinMatrices(e.__uid__,i)
 ;e.__prevSkinMatricesArray&&e.__prevSkinMatricesArray.length===u.length||(e.__prevSkinMatricesArray=new Float32Array(u.length)),e.__prevSkinMatricesArray.set(u)}}e.__prevWorldViewProjection=e.__prevWorldViewProjection||Er.create(),r?Er.copy(e.__prevWorldViewProjection,A):Er.multiply(e.__prevWorldViewProjection,A,e.worldTransform.array)},getUniform:function(t,e,r){return"prevWorldViewProjection"===r?t.__prevWorldViewProjection:"prevSkinMatrix"===r?t.__prevSkinMatricesArray:"prevSkinMatricesTexture"===r?t.__prevSkinMatricesTexture:"firstRender"===r?!t.__prevWorldViewProjection:e.get(r)},isMaterialChanged:function(){return!0},sortCompare:t.opaqueSortCompare};t.renderPass(d,r,T)}t.bindSceneRendering(null),s.unbind(t)},renderDebug:function(t,e,r,n){var i={normal:0,depth:1,position:2,glossiness:3,metalness:4,albedo:5,velocity:6};null==i[r]&&(console.warn('Unkown type "'+r+'"'),r="normal"),t.saveClear(),t.saveViewport(),t.clearBit=t.gl.DEPTH_BUFFER_BIT,n&&t.setViewport(n);var a=new Ur;Ur.multiply(a,e.worldTransform,e.invProjectionMatrix);var o=this._debugPass;o.setUniform("viewportSize",[t.getWidth(),t.getHeight()]),o.setUniform("gBufferTexture1",this._gBufferTex1),o.setUniform("gBufferTexture2",this._gBufferTex2),o.setUniform("gBufferTexture3",this._gBufferTex3),o.setUniform("gBufferTexture4",this._gBufferTex4),o.setUniform("debug",i[r]),o.setUniform("viewProjectionInv",a.array),o.render(t),t.restoreViewport(),t.restoreClear()},getTargetTexture1:function(){return this._gBufferTex1},getTargetTexture2:function(){return this._gBufferTex2},getTargetTexture3:function(){return this._gBufferTex3},getTargetTexture4:function(){return this._gBufferTex4},dispose:function(t){this._gBufferTex1.dispose(t),this._gBufferTex2.dispose(t),this._gBufferTex3.dispose(t),this._defaultNormalMap.dispose(t),this._defaultRoughnessMap.dispose(t),this._defaultMetalnessMap.dispose(t),this._defaultDiffuseMap.dispose(t),this._frameBuffer.dispose(t)}}),ua=pn.extend({dynamic:!1,topRadius:0,bottomRadius:1,height:2,capSegments:20,heightSegments:1},function(){this.build()},{build:function(){var t=[],e=[],r=[];t.length=0,e.length=0,r.length=0;for(var n=2*Math.PI/this.capSegments,i=[],a=[],o=this.topRadius,s=this.bottomRadius,u=this.height/2,l=Ce.fromValues(0,u,0),h=Ce.fromValues(0,-u,0),c=0;c<this.capSegments;c++){var f=c*n,d=o*Math.sin(f),p=o*Math.cos(f);i.push(Ce.fromValues(d,u,p)),d=s*Math.sin(f),p=s*Math.cos(f),a.push(Ce.fromValues(d,-u,p))}t.push(l),e.push(be.fromValues(0,1));for(var m=this.capSegments,c=0;c<m;c++)t.push(i[c]),e.push(be.fromValues(c/m,0)),r.push([0,c+1,(c+1)%m+1]);var _=t.length;t.push(h),e.push(be.fromValues(0,1));for(var c=0;c<m;c++)t.push(a[c]),e.push(be.fromValues(c/m,0)),r.push([_,_+((c+1)%m+1),_+c+1]);_=t.length;for(var g=this.heightSegments,c=0;c<m;c++)for(var v=0;v<g+1;v++){var y=v/g;t.push(Ce.lerp(Ce.create(),i[c],a[c],y)),e.push(be.fromValues(c/m,y))}for(var c=0;c<m;c++)for(var v=0;v<g;v++){var T=c*(g+1)+v,x=(c+1)%m*(g+1)+v,E=(c+1)%m*(g+1)+v+1,A=c*(g+1)+v+1;r.push([_+x,_+T,_+A]),r.push([_+A,_+E,_+x])}this.attributes.position.fromArray(t),this.attributes.texcoord0.fromArray(e),this.initIndicesFromArray(r),this.generateVertexNormals(),this.boundingBox=new Vr;var b=Math.max(this.topRadius,this.bottomRadius);this.boundingBox.min.set(-b,-this.height/2,-b),this.boundingBox.max.set(b,this.height/2,b)}}),la=pn.extend({dynamic:!1,radius:1,height:2,capSegments:50,heightSegments:1},function(){this.build()},{build:function(){var t=new ua({topRadius:this.radius,bottomRadius:this.radius,capSegments:this.capSegments,heightSegments:this.heightSegments,height:this.height});this.attributes.position.value=t.attributes.position.value,this.attributes.normal.value=t.attributes.normal.value,this.attributes.texcoord0.value=t.attributes.texcoord0.value,this.indices=t.indices,this.boundingBox=t.boundingBox}});Q.import(xr),Q.import(jn),Q.import("@export clay.deferred.light_volume.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nvarying vec3 v_Position;\nvoid main()\n{\n gl_Position = worldViewProjection * vec4(position, 1.0);\n v_Position = position;\n}\n@end"),Q.import("@export clay.deferred.spot_light\n@import clay.deferred.chunk.light_head\n@import clay.deferred.chunk.light_equation\n@import clay.util.calculate_attenuation\nuniform vec3 lightPosition;\nuniform vec3 lightDirection;\nuniform vec3 lightColor;\nuniform float umbraAngleCosine;\nuniform float penumbraAngleCosine;\nuniform float lightRange;\nuniform float falloffFactor;\nuniform vec3 eyePosition;\n#ifdef SHADOWMAP_ENABLED\nuniform sampler2D lightShadowMap;\nuniform mat4 lightMatrix;\nuniform float lightShadowMapSize;\n#endif\n@import clay.plugin.shadow_map_common\nvoid main()\n{\n @import clay.deferred.chunk.gbuffer_read\n vec3 L = lightPosition - position;\n vec3 V = normalize(eyePosition - position);\n float dist = length(L);\n L /= dist;\n float attenuation = lightAttenuation(dist, lightRange);\n float c = dot(-normalize(lightDirection), L);\n float falloff = clamp((c - umbraAngleCosine) / (penumbraAngleCosine - umbraAngleCosine), 0.0, 1.0);\n falloff = pow(falloff, falloffFactor);\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n gl_FragColor.rgb = (1.0 - falloff) * attenuation * lightEquation(\n lightColor, diffuseColor, specularColor, ndl, ndh, ndv, glossiness\n );\n#ifdef SHADOWMAP_ENABLED\n float shadowContrib = computeShadowContrib(\n lightShadowMap, lightMatrix, position, lightShadowMapSize\n );\n gl_FragColor.rgb *= shadowContrib;\n#endif\n gl_FragColor.a = 1.0;\n}\n@end\n"),Q.import("@export clay.deferred.directional_light\n@import clay.deferred.chunk.light_head\n@import clay.deferred.chunk.light_equation\nuniform vec3 lightDirection;\nuniform vec3 lightColor;\nuniform vec3 eyePosition;\n#ifdef SHADOWMAP_ENABLED\nuniform sampler2D lightShadowMap;\nuniform float lightShadowMapSize;\nuniform mat4 lightMatrices[SHADOW_CASCADE];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#endif\n@import clay.plugin.shadow_map_common\nvoid main()\n{\n @import clay.deferred.chunk.gbuffer_read\n vec3 L = -normalize(lightDirection);\n vec3 V = normalize(eyePosition - position);\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n gl_FragColor.rgb = lightEquation(\n lightColor, diffuseColor, specularColor, ndl, ndh, ndv, glossiness\n );\n#ifdef SHADOWMAP_ENABLED\n float shadowContrib = 1.0;\n for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n if (\n z >= shadowCascadeClipsNear[_idx_] &&\n z <= shadowCascadeClipsFar[_idx_]\n ) {\n shadowContrib = computeShadowContrib(\n lightShadowMap, lightMatrices[_idx_], position, lightShadowMapSize,\n vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n );\n }\n }}\n gl_FragColor.rgb *= shadowContrib;\n#endif\n gl_FragColor.a = 1.0;\n}\n@end\n"),Q.import("@export clay.deferred.ambient_light\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture3;\nuniform vec3 lightColor;\nuniform vec2 windowSize: WINDOW_SIZE;\nvoid main()\n{\n vec2 uv = gl_FragCoord.xy / windowSize;\n vec4 texel1 = texture2D(gBufferTexture1, uv);\n if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n vec3 albedo = texture2D(gBufferTexture3, uv).rgb;\n gl_FragColor.rgb = lightColor * albedo;\n gl_FragColor.a = 1.0;\n}\n@end"),Q.import("@export clay.deferred.ambient_sh_light\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture3;\nuniform vec3 lightColor;\nuniform vec3 lightCoefficients[9];\nuniform vec2 windowSize: WINDOW_SIZE;\nvec3 calcAmbientSHLight(vec3 N) {\n return lightCoefficients[0]\n + lightCoefficients[1] * N.x\n + lightCoefficients[2] * N.y\n + lightCoefficients[3] * N.z\n + lightCoefficients[4] * N.x * N.z\n + lightCoefficients[5] * N.z * N.y\n + lightCoefficients[6] * N.y * N.x\n + lightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n + lightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}\nvoid main()\n{\n vec2 uv = gl_FragCoord.xy / windowSize;\n vec4 texel1 = texture2D(gBufferTexture1, uv);\n if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n vec3 N = texel1.rgb * 2.0 - 1.0;\n vec3 albedo = texture2D(gBufferTexture3, uv).rgb;\n gl_FragColor.rgb = lightColor * albedo * calcAmbientSHLight(N);\n gl_FragColor.a = 1.0;\n}\n@end"),Q.import("@export clay.deferred.ambient_cubemap_light\n@import clay.deferred.chunk.light_head\nuniform vec3 lightColor;\nuniform samplerCube lightCubemap;\nuniform sampler2D brdfLookup;\nuniform vec3 eyePosition;\n@import clay.util.rgbm\nvoid main()\n{\n @import clay.deferred.chunk.gbuffer_read\n vec3 V = normalize(eyePosition - position);\n vec3 L = reflect(-V, N);\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n float rough = clamp(1.0 - glossiness, 0.0, 1.0);\n float bias = rough * 5.0;\n vec2 brdfParam = texture2D(brdfLookup, vec2(rough, ndv)).xy;\n vec3 envWeight = specularColor * brdfParam.x + brdfParam.y;\n vec3 envTexel = RGBMDecode(textureCubeLodEXT(lightCubemap, L, bias), 8.12);\n gl_FragColor.rgb = lightColor * envTexel * envWeight;\n gl_FragColor.a = 1.0;\n}\n@end"),Q.import("@export clay.deferred.point_light\n@import clay.deferred.chunk.light_head\n@import clay.util.calculate_attenuation\n@import clay.deferred.chunk.light_equation\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\nuniform vec3 eyePosition;\n#ifdef SHADOWMAP_ENABLED\nuniform samplerCube lightShadowMap;\nuniform float lightShadowMapSize;\n#endif\nvarying vec3 v_Position;\n@import clay.plugin.shadow_map_common\nvoid main()\n{\n @import clay.deferred.chunk.gbuffer_read\n vec3 L = lightPosition - position;\n vec3 V = normalize(eyePosition - position);\n float dist = length(L);\n L /= dist;\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n float attenuation = lightAttenuation(dist, lightRange);\n gl_FragColor.rgb = attenuation * lightEquation(\n lightColor, diffuseColor, specularColor, ndl, ndh, ndv, glossiness\n );\n#ifdef SHADOWMAP_ENABLED\n float shadowContrib = computeShadowContribOmni(\n lightShadowMap, -L * dist, lightRange\n );\n gl_FragColor.rgb *= clamp(shadowContrib, 0.0, 1.0);\n#endif\n gl_FragColor.a = 1.0;\n}\n@end"),Q.import("@export clay.deferred.sphere_light\n@import clay.deferred.chunk.light_head\n@import clay.util.calculate_attenuation\n@import clay.deferred.chunk.light_equation\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\nuniform float lightRadius;\nuniform vec3 eyePosition;\nvarying vec3 v_Position;\nvoid main()\n{\n @import clay.deferred.chunk.gbuffer_read\n vec3 L = lightPosition - position;\n vec3 V = normalize(eyePosition - position);\n float dist = length(L);\n vec3 R = reflect(V, N);\n float tmp = dot(L, R);\n vec3 cToR = tmp * R - L;\n float d = length(cToR);\n L = L + cToR * clamp(lightRadius / d, 0.0, 1.0);\n L = normalize(L);\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n float attenuation = lightAttenuation(dist, lightRange);\n gl_FragColor.rgb = lightColor * ndl * attenuation;\n glossiness = clamp(glossiness - lightRadius / 2.0 / dist, 0.0, 1.0);\n gl_FragColor.rgb = attenuation * lightEquation(\n lightColor, diffuseColor, specularColor, ndl, ndh, ndv, glossiness\n );\n gl_FragColor.a = 1.0;\n}\n@end"),Q.import("@export clay.deferred.tube_light\n@import clay.deferred.chunk.light_head\n@import clay.util.calculate_attenuation\n@import clay.deferred.chunk.light_equation\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\nuniform vec3 lightExtend;\nuniform vec3 eyePosition;\nvarying vec3 v_Position;\nvoid main()\n{\n @import clay.deferred.chunk.gbuffer_read\n vec3 L = lightPosition - position;\n vec3 V = normalize(eyePosition - position);\n vec3 R = reflect(V, N);\n vec3 L0 = lightPosition - lightExtend - position;\n vec3 L1 = lightPosition + lightExtend - position;\n vec3 LD = L1 - L0;\n float len0 = length(L0);\n float len1 = length(L1);\n float irra = 2.0 * clamp(dot(N, L0) / (2.0 * len0) + dot(N, L1) / (2.0 * len1), 0.0, 1.0);\n float LDDotR = dot(R, LD);\n float t = (LDDotR * dot(R, L0) - dot(L0, LD)) / (dot(LD, LD) - LDDotR * LDDotR);\n t = clamp(t, 0.0, 1.0);\n L = L0 + t * LD;\n float dist = length(L);\n L /= dist;\n vec3 H = normalize(L + V);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n glossiness = clamp(glossiness - 0.0 / 2.0 / dist, 0.0, 1.0);\n gl_FragColor.rgb = lightColor * irra * lightAttenuation(dist, lightRange)\n * (diffuseColor + D_Phong(glossiness, ndh) * F_Schlick(ndv, specularColor));\n gl_FragColor.a = 1.0;\n}\n@end"),Q.import(xr);var ha=ke.extend(function(){var t=Q.source("clay.compositor.vertex"),e=Q.source("clay.deferred.light_volume.vertex"),r=new Q(t,Q.source("clay.deferred.directional_light")),n=function(t){t.blendEquation(t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)},i=function(t){return new nr({shader:t,blend:n,transparent:!0,depthMask:!1})},a=function(t){return new Q(e,Q.source("clay.deferred."+t))},o=new ua({capSegments:10}),s=new Ur;s.rotateX(Math.PI/2).translate(new Cr(0,-1,0)),o.applyTransform(s);var u=new la({capSegments:10});return s.identity().rotateZ(Math.PI/2),u.applyTransform(s),{shadowMapPass:null,autoResize:!0,_createLightPassMat:i,_gBuffer:new sa,_lightAccumFrameBuffer:new oi,_lightAccumTex:new An({type:Tn.HALF_FLOAT,minFilter:Tn.NEAREST,magFilter:Tn.NEAREST}),_fullQuadPass:new hi({blendWithPrevious:!0}),_directionalLightMat:i(r),_ambientMat:i(new Q(t,Q.source("clay.deferred.ambient_light"))),_ambientSHMat:i(new Q(t,Q.source("clay.deferred.ambient_sh_light"))),_ambientCubemapMat:i(new Q(t,Q.source("clay.deferred.ambient_cubemap_light"))),_spotLightShader:a("spot_light"),_pointLightShader:a("point_light"),_sphereLightShader:a("sphere_light"),_tubeLightShader:a("tube_light"),_lightSphereGeo:new vn({widthSegments:10,heightSegements:10}),_lightConeGeo:o,_lightCylinderGeo:u,_outputPass:new hi({fragment:Q.source("clay.compositor.output")})}},{render:function(t,e,r,n){n=n||{},n.renderToTarget=n.renderToTarget||!1,n.notUpdateShadow=n.notUpdateShadow||!1,n.notUpdateScene=n.notUpdateScene||!1,n.notUpdateScene||e.update(!1,!0),e.updateLights(),r.update(!0);var i=t.getDevicePixelRatio();!this.autoResize||t.getWidth()*i===this._lightAccumTex.width&&t.getHeight()*i===this._lightAccumTex.height||this.resize(t.getWidth()*i,t.getHeight()*i),this._gBuffer.update(t,e,r),this._accumulateLightBuffer(t,e,r,!n.notUpdateShadow),n.renderToTarget||(this._outputPass.setUniform("texture",this._lightAccumTex),this._outputPass.render(t))},getTargetTexture:function(){return this._lightAccumTex},getTargetFrameBuffer:function(){return this._lightAccumFrameBuffer},getGBuffer:function(){return this._gBuffer},setViewport:function(t,e,r,n,i){this._gBuffer.setViewport(t,e,r,n,i),this._lightAccumFrameBuffer.viewport=this._gBuffer.getViewport()},resize:function(t,e){this._lightAccumTex.width=t,this._lightAccumTex.height=e,this._gBuffer.resize(t,e)},_accumulateLightBuffer:function(t,e,r,n){for(var i=t.gl,a=this._lightAccumTex,o=this._lightAccumFrameBuffer,s=r.getWorldPosition().array,u=0;u<e.lights.length;u++)e.lights[u].invisible||this._updateLightProxy(e.lights[u]);var l=this.shadowMapPass;l&&n&&(i.clearColor(1,1,1,1),this._prepareLightShadow(t,e,r)),this.trigger("beforelightaccumulate",t,e,r,n),o.attach(a),o.bind(t);var h=t.clearColor,c=o.viewport;if(c){var f=c.devicePixelRatio;i.enable(i.SCISSOR_TEST),i.scissor(c.x*f,c.y*f,c.width*f,c.height*f)}i.clearColor(h[0],h[1],h[2],h[3]),i.clear(i.COLOR_BUFFER_BIT),i.enable(i.BLEND),c&&i.disable(i.SCISSOR_TEST),this.trigger("startlightaccumulate",t,e,r);var d=new Ur;Ur.multiply(d,r.worldTransform,r.invProjectionMatrix);for(var p=[],u=0;u<e.lights.length;u++){var m=e.lights[u];if(!m.invisible){var _=m.uniformTemplates,g=m.volumeMesh||m.__volumeMesh;if(g){var v=g.material;g.castShadow=!1;var y=!1;switch(m.type){case"POINT_LIGHT":v.setUniform("lightColor",_.pointLightColor.value(m)),v.setUniform("lightRange",_.pointLightRange.value(m)),v.setUniform("lightPosition",_.pointLightPosition.value(m));break;case"SPOT_LIGHT":v.setUniform("lightPosition",_.spotLightPosition.value(m)),v.setUniform("lightColor",_.spotLightColor.value(m)),v.setUniform("lightRange",_.spotLightRange.value(m)),v.setUniform("lightDirection",_.spotLightDirection.value(m)),v.setUniform("umbraAngleCosine",_.spotLightUmbraAngleCosine.value(m)),v.setUniform("penumbraAngleCosine",_.spotLightPenumbraAngleCosine.value(m)),v.setUniform("falloffFactor",_.spotLightFalloffFactor.value(m));break;case"SPHERE_LIGHT":v.setUniform("lightColor",_.sphereLightColor.value(m)),v.setUniform("lightRange",_.sphereLightRange.value(m)),v.setUniform("lightRadius",_.sphereLightRadius.value(m)),v.setUniform("lightPosition",_.sphereLightPosition.value(m));break;case"TUBE_LIGHT":v.setUniform("lightColor",_.tubeLightColor.value(m)),v.setUniform("lightRange",_.tubeLightRange.value(m)),v.setUniform("lightExtend",_.tubeLightExtend.value(m)),v.setUniform("lightPosition",_.tubeLightPosition.value(m));break;default:y=!0}if(y)continue;v.setUniform("eyePosition",s),v.setUniform("viewProjectionInv",d.array),v.setUniform("gBufferTexture1",this._gBuffer.getTargetTexture1()),v.setUniform("gBufferTexture2",this._gBuffer.getTargetTexture2()),v.setUniform("gBufferTexture3",this._gBuffer.getTargetTexture3()),p.push(g)}else{var T=this._fullQuadPass,y=!1;switch(m.type){case"AMBIENT_LIGHT":T.material=this._ambientMat,T.material.setUniform("lightColor",_.ambientLightColor.value(m));break;case"AMBIENT_SH_LIGHT":T.material=this._ambientSHMat,T.material.setUniform("lightColor",_.ambientSHLightColor.value(m)),T.material.setUniform("lightCoefficients",_.ambientSHLightCoefficients.value(m));break;case"AMBIENT_CUBEMAP_LIGHT":T.material=this._ambientCubemapMat,T.material.setUniform("lightColor",_.ambientCubemapLightColor.value(m)),T.material.setUniform("lightCubemap",_.ambientCubemapLightCubemap.value(m)),T.material.setUniform("brdfLookup",_.ambientCubemapLightBRDFLookup.value(m));break;case"DIRECTIONAL_LIGHT":var x=l&&m.castShadow;T.material=this._directionalLightMat,T.material[x?"define":"undefine"]("fragment","SHADOWMAP_ENABLED"),x&&T.material.define("fragment","SHADOW_CASCADE",m.shadowCascade),T.material.setUniform("lightColor",_.directionalLightColor.value(m)),T.material.setUniform("lightDirection",_.directionalLightDirection.value(m));break;default:y=!0}if(y)continue;var E=T.material;E.setUniform("eyePosition",s),E.setUniform("viewProjectionInv",d.array),E.setUniform("gBufferTexture1",this._gBuffer.getTargetTexture1()),E.setUniform("gBufferTexture2",this._gBuffer.getTargetTexture2()),E.setUniform("gBufferTexture3",this._gBuffer.getTargetTexture3()),l&&m.castShadow&&(E.setUniform("lightShadowMap",m.__shadowMap),E.setUniform("lightMatrices",m.__lightMatrices),E.setUniform("shadowCascadeClipsNear",m.__cascadeClipsNear),E.setUniform("shadowCascadeClipsFar",m.__cascadeClipsFar),E.setUniform("lightShadowMapSize",m.shadowResolution)),T.renderQuad(t)}}}this._renderVolumeMeshList(t,e,r,p),this.trigger("lightaccumulate",t,e,r),o.unbind(t),this.trigger("afterlightaccumulate",t,e,r)},_prepareLightShadow:function(){var t=new Ur;return function(e,r,n){for(var i=0;i<r.lights.length;i++){var a=r.lights[i],o=a.volumeMesh||a.__volumeMesh;if(a.castShadow&&!a.invisible)switch(a.type){case"POINT_LIGHT":case"SPOT_LIGHT":if(Ur.multiply(t,n.viewMatrix,o.worldTransform),r.isFrustumCulled(o,n,t.array))continue;this._prepareSingleLightShadow(e,r,n,a,o.material);break;case"DIRECTIONAL_LIGHT":this._prepareSingleLightShadow(e,r,n,a,null)}}}}(),_prepareSingleLightShadow:function(t,e,r,n,i){switch(n.type){case"POINT_LIGHT":var a=[];this.shadowMapPass.renderPointLightShadow(t,e,n,a),i.setUniform("lightShadowMap",a[0]),i.setUniform("lightShadowMapSize",n.shadowResolution);break;case"SPOT_LIGHT":var a=[],o=[];this.shadowMapPass.renderSpotLightShadow(t,e,n,o,a),i.setUniform("lightShadowMap",a[0]),i.setUniform("lightMatrix",o[0]),i.setUniform("lightShadowMapSize",n.shadowResolution);break;case"DIRECTIONAL_LIGHT":var a=[],o=[],s=[];this.shadowMapPass.renderDirectionalLightShadow(t,e,r,n,s,o,a);var u=s.slice(),l=s.slice();u.pop(),l.shift(),u.reverse(),l.reverse(),o.reverse(),n.__cascadeClipsNear=u,n.__cascadeClipsFar=l,n.__shadowMap=a[0],n.__lightMatrices=o}},_updateLightProxy:function(t){var e;if(t.volumeMesh)e=t.volumeMesh;else switch(t.type){case"POINT_LIGHT":case"SPHERE_LIGHT":var r="SPHERE_LIGHT"===t.type?this._sphereLightShader:this._pointLightShader;t.__volumeMesh||(t.__volumeMesh=new Cn({material:this._createLightPassMat(r),geometry:this._lightSphereGeo,culling:!1})),e=t.__volumeMesh;var n=t.range+(t.radius||0);e.scale.set(n,n,n);break;case"SPOT_LIGHT":t.__volumeMesh=t.__volumeMesh||new Cn({material:this._createLightPassMat(this._spotLightShader),geometry:this._lightConeGeo,culling:!1}),e=t.__volumeMesh;var i=Math.tan(t.penumbraAngle*Math.PI/180),a=t.range;e.scale.set(i*a,i*a,a/2);break;case"TUBE_LIGHT":t.__volumeMesh=t.__volumeMesh||new Cn({material:this._createLightPassMat(this._tubeLightShader),geometry:this._lightCylinderGeo,culling:!1}),e=t.__volumeMesh;var a=t.range;e.scale.set(t.length/2+a,a,a)}if(e){e.update(),Ur.multiply(e.worldTransform,t.worldTransform,e.worldTransform);var o=this.shadowMapPass&&t.castShadow;e.material[o?"define":"undefine"]("fragment","SHADOWMAP_ENABLED")}},_renderVolumeMeshList:function(){function t(){return r}var e=new Ur,r=new nr({shader:new Q(Q.source("clay.prez.vertex"),Q.source("clay.prez.fragment"))});return function(r,n,i,a){var o=r.gl;o.depthFunc(o.LEQUAL);for(var s=0;s<a.length;s++){var u=a[s];Ur.multiply(e,i.viewMatrix,u.worldTransform),n.isFrustumCulled(u,i,e.array)||(o.colorMask(!1,!1,!1,!1),o.depthMask(!0),o.clear(o.DEPTH_BUFFER_BIT),r.renderPass([u],i,{getMaterial:t}),o.colorMask(!0,!0,!0,!0),u.material.depthMask=!0,r.renderPass([u],i))}o.depthFunc(o.LESS)}}(),dispose:function(t){this._gBuffer.dispose(t),this._lightAccumFrameBuffer.dispose(t),this._lightAccumTex.dispose(t),this._lightConeGeo.dispose(t),this._lightCylinderGeo.dispose(t),this._lightSphereGeo.dispose(t),this._fullQuadPass.dispose(t),this._outputPass.dispose(t),this._directionalLightMat.dispose(t),this.shadowMapPass.dispose(t)}}),ca={};ca.create=function(){var t=new Ee(4);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},ca.clone=function(t){var e=new Ee(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},ca.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},ca.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},ca.transpose=function(t,e){if(t===e){var r=e[1];t[1]=e[2],t[2]=r}else t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3];return t},ca.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r*a-i*n;return o?(o=1/o,t[0]=a*o,t[1]=-n*o,t[2]=-i*o,t[3]=r*o,t):null},ca.adjoint=function(t,e){var r=e[0];return t[0]=e[3],t[1]=-e[1],t[2]=-e[2],t[3]=r,t},ca.determinant=function(t){return t[0]*t[3]-t[2]*t[1]},ca.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=r[0],u=r[1],l=r[2],h=r[3];return t[0]=n*s+a*u,t[1]=i*s+o*u,t[2]=n*l+a*h,t[3]=i*l+o*h,t},ca.mul=ca.multiply,ca.rotate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u+a*s,t[1]=i*u+o*s,t[2]=n*-s+a*u,t[3]=i*-s+o*u,t},ca.scale=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=r[0],u=r[1];return t[0]=n*s,t[1]=i*s,t[2]=a*u,t[3]=o*u,t},ca.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))},ca.LDU=function(t,e,r,n){return t[2]=n[2]/n[0],r[0]=n[0],r[1]=n[1],r[3]=n[3]-t[2]*r[1],[t,e,r]};var fa={};fa.create=function(){var t=new Ee(6);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},fa.clone=function(t){var e=new Ee(6);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},fa.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},fa.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},fa.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=r*a-n*i;return u?(u=1/u,t[0]=a*u,t[1]=-n*u,t[2]=-i*u,t[3]=r*u,t[4]=(i*s-a*o)*u,t[5]=(n*o-r*s)*u,t):null},fa.determinant=function(t){return t[0]*t[3]-t[1]*t[2]},fa.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=r[0],h=r[1],c=r[2],f=r[3],d=r[4],p=r[5];return t[0]=n*l+a*h,t[1]=i*l+o*h,t[2]=n*c+a*f,t[3]=i*c+o*f,t[4]=n*d+a*p+s,t[5]=i*d+o*p+u,t},fa.mul=fa.multiply,fa.rotate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=Math.sin(r),h=Math.cos(r);return t[0]=n*h+a*l,t[1]=i*h+o*l,t[2]=n*-l+a*h,t[3]=i*-l+o*h,t[4]=s,t[5]=u,t},fa.scale=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=r[0],h=r[1];return t[0]=n*l,t[1]=i*l,t[2]=a*h,t[3]=o*h,t[4]=s,t[5]=u,t},fa.translate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=r[0],h=r[1];return t[0]=n,t[1]=i,t[2]=a,t[3]=o,t[4]=n*l+a*h+s,t[5]=i*l+o*h+u,t},fa.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)};var da={vec2:be,vec3:Ce,vec4:Re,mat2:ca,mat2d:fa,mat3:Le,mat4:Er,quat:Ne},pa=new Vr,ma=Cn.extend(function(){return{instances:[],instancedAttributes:{},_attributesSymbols:[]}},function(){this._cache=new un,this.createInstancedAttribute("instanceMat1","float",4,1),this.createInstancedAttribute("instanceMat2","float",4,1),this.createInstancedAttribute("instanceMat3","float",4,1)},{isInstancedMesh:function(){return!0},getInstanceCount:function(){return this.instances.length},removeAttribute:function(t){var e=this._attributesSymbols.indexOf(t);e>=0&&this._attributesSymbols.splice(e,1),delete this.instancedAttributes[t]},createInstancedAttribute:function(t,e,r,n){this.instancedAttributes[t]||(this.instancedAttributes[t]={symbol:t,type:e,size:r,divisor:null==n?1:n,value:null},this._attributesSymbols.push(t))},getInstancedAttributesBuffers:function(t){var e=this._cache;e.use(t.__uid__);var r=e.get("buffers")||[];if(e.isDirty("dirty")){for(var n=t.gl,i=0;i<this._attributesSymbols.length;i++){var a=this.instancedAttributes[this._attributesSymbols[i]],o=r[i];o||(o={buffer:n.createBuffer()},r[i]=o),o.symbol=a.symbol,o.divisor=a.divisor,o.size=a.size,o.type=a.type,n.bindBuffer(n.ARRAY_BUFFER,o.buffer),n.bufferData(n.ARRAY_BUFFER,a.value,n.DYNAMIC_DRAW)}e.fresh("dirty"),e.put("buffers",r)}return r},update:function(t){Cn.prototype.update.call(this,t);var e=4*this.getInstanceCount(),r=this.instancedAttributes,n=r.instanceMat1.value,i=r.instanceMat2.value,a=r.instanceMat3.value;n&&n.length===e||(n=r.instanceMat1.value=new Float32Array(e),i=r.instanceMat2.value=new Float32Array(e),a=r.instanceMat3.value=new Float32Array(e));var o=this.skeleton&&this.skeleton.boundingBox||this.geometry.boundingBox,s=null!=o&&(this.castShadow||this.frustumCulling);s&&this.instances.length>0?(this.boundingBox=this.boundingBox||new Vr,this.boundingBox.min.set(1/0,1/0,1/0),this.boundingBox.max.set(-1/0,-1/0,-1/0)):this.boundingBox=null;for(var u=0;u<this.instances.length;u++){var l=this.instances[u],h=l.node;if(!h)throw new Error("Instance must include node");var c=h.worldTransform.array,f=4*u;n[f]=c[0],n[f+1]=c[1],n[f+2]=c[2],n[f+3]=c[12],i[f]=c[4],i[f+1]=c[5],i[f+2]=c[6],i[f+3]=c[13],a[f]=c[8],a[f+1]=c[9],a[f+2]=c[10],a[f+3]=c[14],s&&(pa.transformFrom(o,h.worldTransform),this.boundingBox.union(pa,this.boundingBox))}this._cache.dirty("dirty")}}),_a=qr.extend({range:100,radius:5},{type:"SPHERE_LIGHT",uniformTemplates:{sphereLightPosition:{type:"3f",value:function(t){return t.getWorldPosition().array}},sphereLightRange:{type:"1f",value:function(t){return t.range}},sphereLightRadius:{type:"1f",value:function(t){return t.radius}},sphereLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}}}),ga=qr.extend({range:100,length:10},{type:"TUBE_LIGHT",uniformTemplates:{tubeLightPosition:{type:"3f",value:function(t){return t.getWorldPosition().array}},tubeLightExtend:{type:"3f",value:function(){var t=new Cr;return function(e){return t.copy(e.worldTransform.x).normalize().scale(e.length/2).array}}()},tubeLightRange:{type:"1f",value:function(t){return t.range}},tubeLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}}}),va=ke.extend({rootPath:"",textureRootPath:"",shaderRootPath:"",scene:null,camera:null},{load:function(t){var e=this;this.rootPath||(this.rootPath=t.slice(0,t.lastIndexOf("/"))),Ve.request.get({url:t,onprogress:function(t,r,n){e.trigger("progress",t,r,n)},onerror:function(t){e.trigger("error",t)},responseType:"text",onload:function(t){Kt(JSON.parse(t),{textureRootPath:this.textureRootPath||this.rootPath,camera:this.camera,scene:this.scene})}})}}),ya=function(){this.array=ca.create(),this._dirty=!0};ya.prototype={constructor:ya,setArray:function(t){for(var e=0;e<this.array.length;e++)this.array[e]=t[e];return this._dirty=!0,this},clone:function(){return(new ya).copy(this)},copy:function(t){return ca.copy(this.array,t.array),this._dirty=!0,this},adjoint:function(){return ca.adjoint(this.array,this.array),this._dirty=!0,this},determinant:function(){return ca.determinant(this.array)},identity:function(){return ca.identity(this.array),this._dirty=!0,this},invert:function(){return ca.invert(this.array,this.array),this._dirty=!0,this},mul:function(t){return ca.mul(this.array,this.array,t.array),this._dirty=!0,this},mulLeft:function(t){return ca.mul(this.array,t.array,this.array),this._dirty=!0,this},multiply:function(t){return ca.multiply(this.array,this.array,t.array),this._dirty=!0,this},multiplyLeft:function(t){return ca.multiply(this.array,t.array,this.array),this._dirty=!0,this},rotate:function(t){return ca.rotate(this.array,this.array,t),this._dirty=!0,this},scale:function(t){return ca.scale(this.array,this.array,t.array),this._dirty=!0,this},transpose:function(){return ca.transpose(this.array,this.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},ya.adjoint=function(t,e){return ca.adjoint(t.array,e.array),t._dirty=!0,t},ya.copy=function(t,e){return ca.copy(t.array,e.array),t._dirty=!0,t},ya.determinant=function(t){return ca.determinant(t.array)},ya.identity=function(t){return ca.identity(t.array),t._dirty=!0,t},ya.invert=function(t,e){return ca.invert(t.array,e.array),t._dirty=!0,t},ya.mul=function(t,e,r){return ca.mul(t.array,e.array,r.array),t._dirty=!0,t},ya.multiply=ya.mul,ya.rotate=function(t,e,r){return ca.rotate(t.array,e.array,r),t._dirty=!0,t},ya.scale=function(t,e,r){return ca.scale(t.array,e.array,r.array),t._dirty=!0,t},ya.transpose=function(t,e){return ca.transpose(t.array,e.array),t._dirty=!0,t};var Ta=function(){this.array=fa.create(),this._dirty=!0};Ta.prototype={constructor:Ta,setArray:function(t){for(var e=0;e<this.array.length;e++)this.array[e]=t[e];return this._dirty=!0,this},clone:function(){return(new Ta).copy(this)},copy:function(t){return fa.copy(this.array,t.array),this._dirty=!0,this},determinant:function(){return fa.determinant(this.array)},identity:function(){return fa.identity(this.array),this._dirty=!0,this},invert:function(){return fa.invert(this.array,this.array),this._dirty=!0,this},mul:function(t){return fa.mul(this.array,this.array,t.array),this._dirty=!0,this},mulLeft:function(t){return fa.mul(this.array,t.array,this.array),this._dirty=!0,this},multiply:function(t){return fa.multiply(this.array,this.array,t.array),this._dirty=!0,this},multiplyLeft:function(t){return fa.multiply(this.array,t.array,this.array),this._dirty=!0,this},rotate:function(t){
 return fa.rotate(this.array,this.array,t),this._dirty=!0,this},scale:function(t){return fa.scale(this.array,this.array,t.array),this._dirty=!0,this},translate:function(t){return fa.translate(this.array,this.array,t.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},Ta.copy=function(t,e){return fa.copy(t.array,e.array),t._dirty=!0,t},Ta.determinant=function(t){return fa.determinant(t.array)},Ta.identity=function(t){return fa.identity(t.array),t._dirty=!0,t},Ta.invert=function(t,e){return fa.invert(t.array,e.array),t._dirty=!0,t},Ta.mul=function(t,e,r){return fa.mul(t.array,e.array,r.array),t._dirty=!0,t},Ta.multiply=Ta.mul,Ta.rotate=function(t,e,r){return fa.rotate(t.array,e.array,r),t._dirty=!0,t},Ta.scale=function(t,e,r){return fa.scale(t.array,e.array,r.array),t._dirty=!0,t},Ta.translate=function(t,e,r){return fa.translate(t.array,e.array,r.array),t._dirty=!0,t};var xa=function(){this.array=Le.create(),this._dirty=!0};xa.prototype={constructor:xa,setArray:function(t){for(var e=0;e<this.array.length;e++)this.array[e]=t[e];return this._dirty=!0,this},adjoint:function(){return Le.adjoint(this.array,this.array),this._dirty=!0,this},clone:function(){return(new xa).copy(this)},copy:function(t){return Le.copy(this.array,t.array),this._dirty=!0,this},determinant:function(){return Le.determinant(this.array)},fromMat2d:function(t){return Le.fromMat2d(this.array,t.array),this._dirty=!0,this},fromMat4:function(t){return Le.fromMat4(this.array,t.array),this._dirty=!0,this},fromQuat:function(t){return Le.fromQuat(this.array,t.array),this._dirty=!0,this},identity:function(){return Le.identity(this.array),this._dirty=!0,this},invert:function(){return Le.invert(this.array,this.array),this._dirty=!0,this},mul:function(t){return Le.mul(this.array,this.array,t.array),this._dirty=!0,this},mulLeft:function(t){return Le.mul(this.array,t.array,this.array),this._dirty=!0,this},multiply:function(t){return Le.multiply(this.array,this.array,t.array),this._dirty=!0,this},multiplyLeft:function(t){return Le.multiply(this.array,t.array,this.array),this._dirty=!0,this},rotate:function(t){return Le.rotate(this.array,this.array,t),this._dirty=!0,this},scale:function(t){return Le.scale(this.array,this.array,t.array),this._dirty=!0,this},translate:function(t){return Le.translate(this.array,this.array,t.array),this._dirty=!0,this},normalFromMat4:function(t){return Le.normalFromMat4(this.array,t.array),this._dirty=!0,this},transpose:function(){return Le.transpose(this.array,this.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},xa.adjoint=function(t,e){return Le.adjoint(t.array,e.array),t._dirty=!0,t},xa.copy=function(t,e){return Le.copy(t.array,e.array),t._dirty=!0,t},xa.determinant=function(t){return Le.determinant(t.array)},xa.identity=function(t){return Le.identity(t.array),t._dirty=!0,t},xa.invert=function(t,e){return Le.invert(t.array,e.array),t},xa.mul=function(t,e,r){return Le.mul(t.array,e.array,r.array),t._dirty=!0,t},xa.multiply=xa.mul,xa.fromMat2d=function(t,e){return Le.fromMat2d(t.array,e.array),t._dirty=!0,t},xa.fromMat4=function(t,e){return Le.fromMat4(t.array,e.array),t._dirty=!0,t},xa.fromQuat=function(t,e){return Le.fromQuat(t.array,e.array),t._dirty=!0,t},xa.normalFromMat4=function(t,e){return Le.normalFromMat4(t.array,e.array),t._dirty=!0,t},xa.rotate=function(t,e,r){return Le.rotate(t.array,e.array,r),t._dirty=!0,t},xa.scale=function(t,e,r){return Le.scale(t.array,e.array,r.array),t._dirty=!0,t},xa.transpose=function(t,e){return Le.transpose(t.array,e.array),t._dirty=!0,t},xa.translate=function(t,e,r){return Le.translate(t.array,e.array,r.array),t._dirty=!0,t};var Ea=function(){};Ea.prototype.get=function(t){};var Aa=function(t){this.get=function(){return t}};Aa.prototype=new Ea,Aa.prototype.constructor=Aa;var ba=function(t){var e=t.constructor;this.get=function(r){return r||(r=new e),r.copy(t),r}};ba.prototype=new Ea,ba.prototype.constructor=ba;var Sa=function(t,e){var r=e-t;this.get=function(){return Math.random()*r+t}};Sa.prototype=new Ea,Sa.prototype.constructor=Sa;var Ma=function(t,e){var r=e.x-t.x,n=e.y-t.y;this.get=function(e){return e||(e=new Se),Se.set(e,r*Math.random()+t.array[0],n*Math.random()+t.array[1]),e}};Ma.prototype=new Ea,Ma.prototype.constructor=Ma;var wa=function(t,e){var r=e.x-t.x,n=e.y-t.y,i=e.z-t.z;this.get=function(e){return e||(e=new Cr),Cr.set(e,r*Math.random()+t.array[0],n*Math.random()+t.array[1],i*Math.random()+t.array[2]),e}};wa.prototype=new Ea,wa.prototype.constructor=wa,Ea.constant=function(t){return new Aa(t)},Ea.vector=function(t){return new ba(t)},Ea.random1D=function(t,e){return new Sa(t,e)},Ea.random2D=function(t,e){return new Ma(t,e)},Ea.random3D=function(t,e){return new wa(t,e)};var Ca=function(t,e,r,n){t=t||0,e=e||0,r=r||0,n=n||0,this.array=Re.fromValues(t,e,r,n),this._dirty=!0};Ca.prototype={constructor:Ca,add:function(t){return Re.add(this.array,this.array,t.array),this._dirty=!0,this},set:function(t,e,r,n){return this.array[0]=t,this.array[1]=e,this.array[2]=r,this.array[3]=n,this._dirty=!0,this},setArray:function(t){return this.array[0]=t[0],this.array[1]=t[1],this.array[2]=t[2],this.array[3]=t[3],this._dirty=!0,this},clone:function(){return new Ca(this.x,this.y,this.z,this.w)},copy:function(t){return Re.copy(this.array,t.array),this._dirty=!0,this},dist:function(t){return Re.dist(this.array,t.array)},distance:function(t){return Re.distance(this.array,t.array)},div:function(t){return Re.div(this.array,this.array,t.array),this._dirty=!0,this},divide:function(t){return Re.divide(this.array,this.array,t.array),this._dirty=!0,this},dot:function(t){return Re.dot(this.array,t.array)},len:function(){return Re.len(this.array)},length:function(){return Re.length(this.array)},lerp:function(t,e,r){return Re.lerp(this.array,t.array,e.array,r),this._dirty=!0,this},min:function(t){return Re.min(this.array,this.array,t.array),this._dirty=!0,this},max:function(t){return Re.max(this.array,this.array,t.array),this._dirty=!0,this},mul:function(t){return Re.mul(this.array,this.array,t.array),this._dirty=!0,this},multiply:function(t){return Re.multiply(this.array,this.array,t.array),this._dirty=!0,this},negate:function(){return Re.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return Re.normalize(this.array,this.array),this._dirty=!0,this},random:function(t){return Re.random(this.array,t),this._dirty=!0,this},scale:function(t){return Re.scale(this.array,this.array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return Re.scaleAndAdd(this.array,this.array,t.array,e),this._dirty=!0,this},sqrDist:function(t){return Re.sqrDist(this.array,t.array)},squaredDistance:function(t){return Re.squaredDistance(this.array,t.array)},sqrLen:function(){return Re.sqrLen(this.array)},squaredLength:function(){return Re.squaredLength(this.array)},sub:function(t){return Re.sub(this.array,this.array,t.array),this._dirty=!0,this},subtract:function(t){return Re.subtract(this.array,this.array,t.array),this._dirty=!0,this},transformMat4:function(t){return Re.transformMat4(this.array,this.array,t.array),this._dirty=!0,this},transformQuat:function(t){return Re.transformQuat(this.array,this.array,t.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var Ra=Object.defineProperty;if(Ra){var La=Ca.prototype;Ra(La,"x",{get:function(){return this.array[0]},set:function(t){this.array[0]=t,this._dirty=!0}}),Ra(La,"y",{get:function(){return this.array[1]},set:function(t){this.array[1]=t,this._dirty=!0}}),Ra(La,"z",{get:function(){return this.array[2]},set:function(t){this.array[2]=t,this._dirty=!0}}),Ra(La,"w",{get:function(){return this.array[3]},set:function(t){this.array[3]=t,this._dirty=!0}})}Ca.add=function(t,e,r){return Re.add(t.array,e.array,r.array),t._dirty=!0,t},Ca.set=function(t,e,r,n,i){Re.set(t.array,e,r,n,i),t._dirty=!0},Ca.copy=function(t,e){return Re.copy(t.array,e.array),t._dirty=!0,t},Ca.dist=function(t,e){return Re.distance(t.array,e.array)},Ca.distance=Ca.dist,Ca.div=function(t,e,r){return Re.divide(t.array,e.array,r.array),t._dirty=!0,t},Ca.divide=Ca.div,Ca.dot=function(t,e){return Re.dot(t.array,e.array)},Ca.len=function(t){return Re.length(t.array)},Ca.lerp=function(t,e,r,n){return Re.lerp(t.array,e.array,r.array,n),t._dirty=!0,t},Ca.min=function(t,e,r){return Re.min(t.array,e.array,r.array),t._dirty=!0,t},Ca.max=function(t,e,r){return Re.max(t.array,e.array,r.array),t._dirty=!0,t},Ca.mul=function(t,e,r){return Re.multiply(t.array,e.array,r.array),t._dirty=!0,t},Ca.multiply=Ca.mul,Ca.negate=function(t,e){return Re.negate(t.array,e.array),t._dirty=!0,t},Ca.normalize=function(t,e){return Re.normalize(t.array,e.array),t._dirty=!0,t},Ca.random=function(t,e){return Re.random(t.array,e),t._dirty=!0,t},Ca.scale=function(t,e,r){return Re.scale(t.array,e.array,r),t._dirty=!0,t},Ca.scaleAndAdd=function(t,e,r,n){return Re.scaleAndAdd(t.array,e.array,r.array,n),t._dirty=!0,t},Ca.sqrDist=function(t,e){return Re.sqrDist(t.array,e.array)},Ca.squaredDistance=Ca.sqrDist,Ca.sqrLen=function(t){return Re.sqrLen(t.array)},Ca.squaredLength=Ca.sqrLen,Ca.sub=function(t,e,r){return Re.subtract(t.array,e.array,r.array),t._dirty=!0,t},Ca.subtract=Ca.sub,Ca.transformMat4=function(t,e,r){return Re.transformMat4(t.array,e.array,r.array),t._dirty=!0,t},Ca.transformQuat=function(t,e,r){return Re.transformQuat(t.array,e.array,r.array),t._dirty=!0,t};var Na=function(){this.position=new Cr,this.rotation=new Cr,this.velocity=null,this.angularVelocity=null,this.life=1,this.age=0,this.spriteSize=1,this.weight=1,this.emitter=null};Na.prototype.update=function(t){this.velocity&&Ce.scaleAndAdd(this.position.array,this.position.array,this.velocity.array,t),this.angularVelocity&&Ce.scaleAndAdd(this.rotation.array,this.rotation.array,this.angularVelocity.array,t)};var Pa=ke.extend({max:1e3,amount:20,life:null,position:null,rotation:null,velocity:null,angularVelocity:null,spriteSize:null,weight:null,_particlePool:null},function(){this._particlePool=[];for(var t=0;t<this.max;t++){var e=new Na;e.emitter=this,this._particlePool.push(e),this.velocity&&(e.velocity=new Cr),this.angularVelocity&&(e.angularVelocity=new Cr)}},{emit:function(t){for(var e,r=Math.min(this._particlePool.length,this.amount),n=0;n<r;n++)e=this._particlePool.pop(),this.position&&this.position.get(e.position),this.rotation&&this.rotation.get(e.rotation),this.velocity&&this.velocity.get(e.velocity),this.angularVelocity&&this.angularVelocity.get(e.angularVelocity),this.life&&(e.life=this.life.get()),this.spriteSize&&(e.spriteSize=this.spriteSize.get()),this.weight&&(e.weight=this.weight.get()),e.age=0,t.push(e)},kill:function(t){this._particlePool.push(t)}});Pa.constant=Ea.constant,Pa.vector=Ea.vector,Pa.random1D=Ea.random1D,Pa.random2D=Ea.random2D,Pa.random3D=Ea.random3D;var Ia=ke.extend({},{applyTo:function(t,e,r,n){}}),Oa=Ia.extend(function(){return{force:new Cr}},{applyTo:function(t,e,r,n){r>0&&Ce.scaleAndAdd(t.array,t.array,this.force.array,n/r)}});Q.import("@export clay.particle.vertex\nuniform mat4 worldView : WORLDVIEW;\nuniform mat4 projection : PROJECTION;\nattribute vec3 position : POSITION;\nattribute vec3 normal : NORMAL;\n#ifdef UV_ANIMATION\nattribute vec2 texcoord0 : TEXCOORD_0;\nattribute vec2 texcoord1 : TEXCOORD_1;\nvarying vec2 v_Uv0;\nvarying vec2 v_Uv1;\n#endif\nvarying float v_Age;\nvoid main() {\n v_Age = normal.x;\n float rotation = normal.y;\n vec4 worldViewPosition = worldView * vec4(position, 1.0);\n gl_Position = projection * worldViewPosition;\n float w = gl_Position.w;\n gl_PointSize = normal.z * projection[0].x / w;\n #ifdef UV_ANIMATION\n v_Uv0 = texcoord0;\n v_Uv1 = texcoord1;\n #endif\n}\n@end\n@export clay.particle.fragment\nuniform sampler2D sprite;\nuniform sampler2D gradient;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\nvarying float v_Age;\n#ifdef UV_ANIMATION\nvarying vec2 v_Uv0;\nvarying vec2 v_Uv1;\n#endif\nvoid main() {\n vec4 color = vec4(color, alpha);\n #ifdef SPRITE_ENABLED\n #ifdef UV_ANIMATION\n color *= texture2D(sprite, mix(v_Uv0, v_Uv1, gl_PointCoord));\n #else\n color *= texture2D(sprite, gl_PointCoord);\n #endif\n #endif\n #ifdef GRADIENT_ENABLED\n color *= texture2D(gradient, vec2(v_Age, 0.5));\n #endif\n gl_FragColor = color;\n}\n@end");var Da=new Q(Q.source("clay.particle.vertex"),Q.source("clay.particle.fragment")),Ba=wn.extend({loop:!0,oneshot:!1,duration:1,spriteAnimationTileX:1,spriteAnimationTileY:1,spriteAnimationRepeat:0,mode:wn.POINTS,ignorePicking:!0,_elapsedTime:0,_emitting:!0},function(){this.geometry=new pn({dynamic:!0}),this.material||(this.material=new nr({shader:Da,transparent:!0,depthMask:!1}),this.material.enableTexture("sprite")),this._particles=[],this._fields=[],this._emitters=[]},{culling:!1,frustumCulling:!1,castShadow:!1,receiveShadow:!1,addEmitter:function(t){this._emitters.push(t)},removeEmitter:function(t){this._emitters.splice(this._emitters.indexOf(t),1)},addField:function(t){this._fields.push(t)},removeField:function(t){this._fields.splice(this._fields.indexOf(t),1)},reset:function(){for(var t=0;t<this._particles.length;t++){var e=this._particles[t];e.emitter.kill(e)}this._particles.length=0,this._elapsedTime=0,this._emitting=!0},updateParticles:function(t){t/=1e3,this._elapsedTime+=t;var e=this._particles;if(this._emitting){for(var r=0;r<this._emitters.length;r++)this._emitters[r].emit(e);this.oneshot&&(this._emitting=!1)}for(var n=e.length,r=0;r<n;){var i=e[r];i.age+=t,i.age>=i.life?(i.emitter.kill(i),e[r]=e[n-1],e.pop(),n--):r++}for(var r=0;r<n;r++){var i=e[r];if(this._fields.length>0)for(var a=0;a<this._fields.length;a++)this._fields[a].applyTo(i.velocity,i.position,i.weight,t);i.update(t)}this._updateVertices()},_updateVertices:function(){var t=this.geometry,e=this.spriteAnimationTileX,r=this.spriteAnimationTileY,n=this.spriteAnimationRepeat,i=r*e*n,a=i>1,o=t.attributes.position.value,s=t.attributes.normal.value,u=t.attributes.texcoord0.value,l=t.attributes.texcoord1.value,h=this._particles.length;o&&o.length===3*h||(o=t.attributes.position.value=new Float32Array(3*h),s=t.attributes.normal.value=new Float32Array(3*h),a&&(u=t.attributes.texcoord0.value=new Float32Array(2*h),l=t.attributes.texcoord1.value=new Float32Array(2*h)));for(var c=1/e,f=0;f<h;f++){for(var d=this._particles[f],p=3*f,m=0;m<3;m++)o[p+m]=d.position.array[m],s[p]=d.age/d.life,s[p+1]=0,s[p+2]=d.spriteSize;var _=2*f;if(a){var g=d.age/d.life,v=Math.round(g*(i-1))*n,y=Math.floor(v*c),T=v-y*e;u[_]=T/e,u[_+1]=1-y/r,l[_]=(T+1)/e,l[_+1]=1-(y+1)/r}}t.dirty()},isFinished:function(){return this._elapsedTime>this.duration&&!this.loop},dispose:function(t){for(var e=0;e<this._particles.length;e++){var r=this._particles[e];r.emitter.kill(r)}this.geometry.dispose(t)},clone:function(){var t=new Ba({material:this.material});t.loop=this.loop,t.duration=this.duration,t.oneshot=this.oneshot,t.spriteAnimationRepeat=this.spriteAnimationRepeat,t.spriteAnimationTileY=this.spriteAnimationTileY,t.spriteAnimationTileX=this.spriteAnimationTileX,t.position.copy(this.position),t.rotation.copy(this.rotation),t.scale.copy(this.scale);for(var e=0;e<this._children.length;e++)t.add(this._children[e].clone());return t}});Q.import("@export clay.picking.color.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n@import clay.chunk.skinning_header\nvoid main(){\n vec3 skinnedPosition = position;\n #ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n #endif\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@end\n@export clay.picking.color.fragment\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nvoid main() {\n gl_FragColor = color;\n}\n@end");var Ua=ke.extend(function(){return{renderer:null,downSampleRatio:1,width:100,height:100,lookupOffset:1,_frameBuffer:null,_texture:null,_shader:null,_idMaterials:[],_lookupTable:[],_meshMaterials:[],_idOffset:0}},function(){this.renderer&&(this.width=this.renderer.getWidth(),this.height=this.renderer.getHeight()),this._init()},{_init:function(){this._texture=new An({width:this.width*this.downSampleRatio,height:this.height*this.downSampleRatio}),this._frameBuffer=new oi,this._shader=new Q(Q.source("clay.picking.color.vertex"),Q.source("clay.picking.color.fragment"))},setPrecision:function(t){this._texture.width=this.width*t,this._texture.height=this.height*t,this.downSampleRatio=t},resize:function(t,e){this._texture.width=t*this.downSampleRatio,this._texture.height=e*this.downSampleRatio,this.width=t,this.height=e,this._texture.dirty()},update:function(t,e){var r=this.renderer;r.getWidth()===this.width&&r.getHeight()===this.height||this.resize(r.width,r.height),this._frameBuffer.attach(this._texture),this._frameBuffer.bind(r),this._idOffset=this.lookupOffset,this._setMaterial(t),r.render(t,e),this._restoreMaterial(),this._frameBuffer.unbind(r)},_setMaterial:function(t){for(var e=0;e<t._children.length;e++){var r=t._children[e];if(r.geometry&&r.material&&r.material.shader){var n=this._idOffset++,i=n-this.lookupOffset,a=this._idMaterials[i];if(!a){a=new nr({shader:this._shader});var o=se(n);o[0]/=255,o[1]/=255,o[2]/=255,o[3]=1,a.set("color",o),this._idMaterials[i]=a}this._meshMaterials[i]=r.material,this._lookupTable[i]=r,r.material=a}r._children.length&&this._setMaterial(r)}},pick:function(t,e){var r=this.renderer,n=this.downSampleRatio;t=Math.ceil(n*t),e=Math.ceil(n*(this.height-e)),this._frameBuffer.bind(r);var i=new Uint8Array(4),a=r.gl;if(a.readPixels(t,e,1,1,a.RGBA,a.UNSIGNED_BYTE,i),this._frameBuffer.unbind(r),255===i[3]){var o=ue(i[0],i[1],i[2]);if(o){return this._lookupTable[o-this.lookupOffset]}}},_restoreMaterial:function(){for(var t=0;t<this._lookupTable.length;t++)this._lookupTable[t].material=this._meshMaterials[t]},dispose:function(t){this._frameBuffer.dispose(t)}}),Fa="undefined"==typeof document?{}:document,ka=ke.extend(function(){return{target:null,domElement:null,sensitivity:1,speed:.4,up:new Cr(0,1,0),verticalMoveLock:!1,timeline:null,_moveForward:!1,_moveBackward:!1,_moveLeft:!1,_moveRight:!1,_offsetPitch:0,_offsetRoll:0}},function(){this._lockChange=this._lockChange.bind(this),this._keyDown=this._keyDown.bind(this),this._keyUp=this._keyUp.bind(this),this._mouseMove=this._mouseMove.bind(this),this.domElement&&this.init()},{init:function(){var t=this.domElement;Ve.addEventListener(t,"click",this._requestPointerLock),Ve.addEventListener(Fa,"pointerlockchange",this._lockChange),Ve.addEventListener(Fa,"mozpointerlockchange",this._lockChange),Ve.addEventListener(Fa,"webkitpointerlockchange",this._lockChange),Ve.addEventListener(Fa,"keydown",this._keyDown),Ve.addEventListener(Fa,"keyup",this._keyUp),this.timeline&&this.timeline.on("frame",this._detectMovementChange,this)},dispose:function(){var t=this.domElement;t.exitPointerLock=t.exitPointerLock||t.mozExitPointerLock||t.webkitExitPointerLock,t.exitPointerLock&&t.exitPointerLock(),Ve.removeEventListener(t,"click",this._requestPointerLock),Ve.removeEventListener(Fa,"pointerlockchange",this._lockChange),Ve.removeEventListener(Fa,"mozpointerlockchange",this._lockChange),Ve.removeEventListener(Fa,"webkitpointerlockchange",this._lockChange),Ve.removeEventListener(Fa,"keydown",this._keyDown),Ve.removeEventListener(Fa,"keyup",this._keyUp),this.timeline&&this.timeline.off("frame",this._detectMovementChange)},_requestPointerLock:function(){var t=this;t.requestPointerLock=t.requestPointerLock||t.mozRequestPointerLock||t.webkitRequestPointerLock,t.requestPointerLock()},update:function(t){var e=this.target,r=this.target.position,n=e.localTransform.x.normalize(),i=e.localTransform.z.normalize();this.verticalMoveLock&&(i.y=0,i.normalize());var a=this.speed*t/20;this._moveForward&&r.scaleAndAdd(i,-a),this._moveBackward&&r.scaleAndAdd(i,a),this._moveLeft&&r.scaleAndAdd(n,-a/2),this._moveRight&&r.scaleAndAdd(n,a/2),e.rotateAround(e.position,this.up,-this._offsetPitch*t*Math.PI/360);var n=e.localTransform.x;e.rotateAround(e.position,n,-this._offsetRoll*t*Math.PI/360),this._offsetRoll=this._offsetPitch=0},_lockChange:function(){Fa.pointerLockElement===this.domElement||Fa.mozPointerLockElement===this.domElement||Fa.webkitPointerLockElement===this.domElement?Ve.addEventListener(Fa,"mousemove",this._mouseMove,!1):Ve.removeEventListener(Fa,"mousemove",this._mouseMove)},_mouseMove:function(t){var e=t.movementX||t.mozMovementX||t.webkitMovementX||0,r=t.movementY||t.mozMovementY||t.webkitMovementY||0;this._offsetPitch+=e*this.sensitivity/200,this._offsetRoll+=r*this.sensitivity/200,this.trigger("change")},_detectMovementChange:function(t){(this._moveForward||this._moveBackward||this._moveLeft||this._moveRight)&&this.trigger("change"),this.update(t)},_keyDown:function(t){switch(t.keyCode){case 87:case 37:this._moveForward=!0;break;case 83:case 40:this._moveBackward=!0;break;case 65:case 37:this._moveLeft=!0;break;case 68:case 39:this._moveRight=!0}this.trigger("change")},_keyUp:function(t){switch(t.keyCode){case 87:case 37:this._moveForward=!1;break;case 83:case 40:this._moveBackward=!1;break;case 65:case 37:this._moveLeft=!1;break;case 68:case 39:this._moveRight=!1}}}),Ha=ke.extend(function(){return{target:null,moveSpeed:.1,lookAroundSpeed:.1,up:new Cr(0,1,0),timeline:null,onStandardGamepadReady:function(t){},onGamepadDisconnected:function(t){},_moveForward:!1,_moveBackward:!1,_moveLeft:!1,_moveRight:!1,_offsetPitch:0,_offsetRoll:0,_connectedGamepadIndex:0,_standardGamepadAvailable:!1,_gamepadAxisThreshold:.3}},function(){this._checkGamepadCompatibility=this._checkGamepadCompatibility.bind(this),this._disconnectGamepad=this._disconnectGamepad.bind(this),this._getStandardGamepad=this._getStandardGamepad.bind(this),this._scanPressedGamepadButtons=this._scanPressedGamepadButtons.bind(this),this._scanInclinedGamepadAxes=this._scanInclinedGamepadAxes.bind(this),this.update=this.update.bind(this),"function"==typeof navigator.getGamepads&&this.init()},{init:function(){Ve.addEventListener(window,"gamepadconnected",this._checkGamepadCompatibility),this.timeline&&this.timeline.on("frame",this.update),Ve.addEventListener(window,"gamepaddisconnected",this._disconnectGamepad)},dispose:function(){Ve.removeEventListener(window,"gamepadconnected",this._checkGamepadCompatibility),this.timeline&&this.timeline.off("frame",this.update),Ve.removeEventListener(window,"gamepaddisconnected",this._disconnectGamepad)},update:function(t){if(this._standardGamepadAvailable){this._scanPressedGamepadButtons(),this._scanInclinedGamepadAxes();var e=this.target,r=this.target.position,n=e.localTransform.x.normalize(),i=e.localTransform.z.normalize(),a=this.moveSpeed*t/20;this._moveForward&&r.scaleAndAdd(i,-a),this._moveBackward&&r.scaleAndAdd(i,a),this._moveLeft&&r.scaleAndAdd(n,-a),this._moveRight&&r.scaleAndAdd(n,a),e.rotateAround(e.position,this.up,-this._offsetPitch*t*Math.PI/360);var n=e.localTransform.x;e.rotateAround(e.position,n,-this._offsetRoll*t*Math.PI/360),!0!==this._moveForward&&!0!==this._moveBackward&&!0!==this._moveLeft&&!0!==this._moveRight&&0===this._offsetPitch&&0===this._offsetRoll||this.trigger("update"),this._moveForward=this._moveBackward=this._moveLeft=this._moveRight=!1,this._offsetPitch=this._offsetRoll=0}},_checkGamepadCompatibility:function(t){"standard"===t.gamepad.mapping&&(this._standardGamepadIndex=t.gamepad.index,this._standardGamepadAvailable=!0,this.onStandardGamepadReady(t.gamepad))},_disconnectGamepad:function(t){this._standardGamepadAvailable=!1,this.onGamepadDisconnected(t.gamepad)},_getStandardGamepad:function(){return navigator.getGamepads()[this._standardGamepadIndex]},_scanPressedGamepadButtons:function(){for(var t=this._getStandardGamepad().buttons,e=0;e<t.length;e++){if(t[e].pressed)switch(e){case 12:this._moveForward=!0;break;case 13:this._moveBackward=!0;break;case 14:this._moveLeft=!0;break;case 15:this._moveRight=!0}}},_scanInclinedGamepadAxes:function(){for(var t=this._getStandardGamepad().axes,e=0;e<t.length;e++){var r=t[e];if(Math.abs(r)>this._gamepadAxisThreshold)switch(e){case 0:this._moveLeft=r<0,this._moveRight=r>0;break;case 1:this._moveForward=r<0,this._moveBackward=r>0;break;case 2:this._offsetPitch+=r*this.lookAroundSpeed;break;case 3:this._offsetRoll+=r*this.lookAroundSpeed}}}}),Ga=function(){this._track=[]};Ga.prototype={constructor:Ga,recognize:function(t,e,r){return this._doTrack(t,e,r),this._recognize(t)},clear:function(){return this._track.length=0,this},_doTrack:function(t,e,r){var n=t.targetTouches;if(n){for(var i={points:[],touches:[],target:e,event:t},a=0,o=n.length;a<o;a++){var s=n[a];i.points.push([s.clientX,s.clientY]),i.touches.push(s)}this._track.push(i)}},_recognize:function(t){for(var e in Va)if(Va.hasOwnProperty(e)){var r=Va[e](this._track,t);if(r)return r}}};var Va={pinch:function(t,e){var r=t.length;if(r){var n=(t[r-1]||{}).points,i=(t[r-2]||{}).points||n;if(i&&i.length>1&&n&&n.length>1){var a=le(n)/le(i);!isFinite(a)&&(a=1),e.pinchScale=a;var o=he(n);return e.pinchX=o[0],e.pinchY=o[1],{type:"pinch",target:t[0].target,event:e}}}}},Wa=[[0,0],[0,1],[1,1],[1,0]],za=[0,1,2,2,3,0],Xa=Cn.extend({camera:null,plane:null,maxGrid:0,frustumCulling:!1},function(){var t=this.geometry=new pn({dynamic:!0});t.attributes.position.init(6),t.attributes.normal.init(6),t.attributes.texcoord0.init(6),t.indices=new Uint16Array(6),this.plane=new Yr},{updateGeometry:function(){var t=this._unProjectGrid();if(t){for(var e=this.geometry.attributes.position,r=this.geometry.attributes.normal,n=this.geometry.attributes.texcoord0,i=this.geometry.indices,a=0;a<6;a++){var o=za[a];e.set(a,t[o].array),r.set(a,this.plane.normal.array),n.set(a,Wa[o]),i[a]=a}this.geometry.dirty()}},_unProjectGrid:function(){for(var t=new Yr,e=[0,1,0,2,1,3,2,3,4,5,4,6,5,7,6,7,0,4,1,5,2,6,3,7],r=new Cr,n=new Cr,i=[],a=[],o=0;o<4;o++)a[o]=new Cr(0,0);var s=new en;return function(){t.copy(this.plane),t.applyTransform(this.camera.viewMatrix);for(var o=this.camera.frustum.vertices,u=0,l=0;l<12;l++){r.array=o[e[2*l]],n.array=o[e[2*l+1]];var h=t.intersectLine(r,n,i[u]);h&&(i[u]||(i[u]=h),u++)}if(0!==u){for(var l=0;l<u;l++)i[l].applyProjection(this.camera.projectionMatrix);for(var c=i[0].array[0],f=i[0].array[1],d=i[0].array[0],p=i[0].array[1],l=1;l<u;l++)d=Math.max(d,i[l].array[0]),p=Math.max(p,i[l].array[1]),c=Math.min(c,i[l].array[0]),f=Math.min(f,i[l].array[1]);if(c!=d&&f!=p){a[0].array[0]=c,a[0].array[1]=f,a[1].array[0]=c,a[1].array[1]=p,a[2].array[0]=d,a[2].array[1]=p,a[3].array[0]=d,a[3].array[1]=f;for(var l=0;l<4;l++)this.camera.castRay(a[l],s),s.intersectPlane(this.plane,a[l]);return a}}}}()}),ja={left:0,middle:1,right:2},qa=ke.extend(function(){return{timeline:null,domElement:null,target:null,_center:new Cr,minDistance:.1,maxDistance:1e3,maxOrthographicSize:300,minOrthographicSize:30,orthographicAspect:1,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,panMouseButton:"middle",rotateMouseButton:"left",_mode:"rotate",damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new Se,_panVelocity:new Se,_distance:20,_zoomSpeed:0,_stillTimeout:0,_animators:[],_gestureMgr:new Ga}},function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._pinchHandler=this._pinchHandler.bind(this),this.init()},{init:function(){var t=this.domElement;Ve.addEventListener(t,"touchstart",this._mouseDownHandler),Ve.addEventListener(t,"mousedown",this._mouseDownHandler),Ve.addEventListener(t,"wheel",this._mouseWheelHandler),this.timeline&&this.timeline.on("frame",this.update,this),this.target&&this.decomposeTransform()},dispose:function(){var t=this.domElement;Ve.removeEventListener(t,"touchstart",this._mouseDownHandler),Ve.removeEventListener(t,"touchmove",this._mouseMoveHandler),Ve.removeEventListener(t,"touchend",this._mouseUpHandler),Ve.removeEventListener(t,"mousedown",this._mouseDownHandler),Ve.removeEventListener(t,"mousemove",this._mouseMoveHandler),Ve.removeEventListener(t,"mouseup",this._mouseUpHandler),Ve.removeEventListener(t,"wheel",this._mouseWheelHandler),Ve.removeEventListener(t,"mouseout",this._mouseUpHandler),this.timeline&&this.timeline.off("frame",this.update),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(t){this._distance=t,this._needsUpdate=!0},getOrthographicSize:function(){return this._orthoSize},setOrthographicSize:function(t){this._orthoSize=t,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(t){t=Math.max(Math.min(this.maxAlpha,t),this.minAlpha),this._theta=t/180*Math.PI,this._needsUpdate=!0},setBeta:function(t){t=Math.max(Math.min(this.maxBeta,t),this.minBeta),this._phi=-t/180*Math.PI,this._needsUpdate=!0},setCenter:function(t){this._center.setArray(t)},setOption:function(t){t=t||{},["autoRotate","autoRotateAfterStill","autoRotateDirection","autoRotateSpeed","damping","minDistance","maxDistance","minOrthographicSize","maxOrthographicSize","orthographicAspect","minAlpha","maxAlpha","minBeta","maxBeta","rotateSensitivity","zoomSensitivity","panSensitivity"].forEach(function(e){null!=t[e]&&(this[e]=t[e])},this),null!=t.distance&&this.setDistance(t.distance),null!=t.orthographicSize&&this.setOrthographicSize(t.orthographicSize),null!=t.alpha&&this.setAlpha(t.alpha),null!=t.beta&&this.setBeta(t.beta),t.center&&this.setCenter(t.center),this.target&&(this._updateTransform(),this.target.update())},animateTo:function(t){var e=this,r={},n={},i=this.timeline;if(i)return null!=t.distance&&(r.distance=this.getDistance(),n.distance=t.distance),null!=t.orthographicSize&&(r.orthographicSize=this.getOrthographicSize(),n.orthographicSize=t.orthographicSize),null!=t.alpha&&(r.alpha=this.getAlpha(),n.alpha=t.alpha),null!=t.beta&&(r.beta=this.getBeta(),n.beta=t.beta),null!=t.center&&(r.center=this.getCenter(),n.center=t.center),this._addAnimator(i.animate(r).when(t.duration||1e3,n).during(function(){null!=r.alpha&&e.setAlpha(r.alpha),null!=r.beta&&e.setBeta(r.beta),null!=r.distance&&e.setDistance(r.distance),null!=r.orthographicSize&&e.setOrthographicSize(r.orthographicSize),null!=r.center&&e.setCenter(r.center),e._needsUpdate=!0}).done(t.done)).start(t.easing||"linear")},stopAllAnimation:function(){for(var t=0;t<this._animators.length;t++)this._animators[t].stop();this._animators.length=0},_isAnimating:function(){return this._animators.length>0},update:function(t){if(t=t||16,this._rotating){var e=("cw"===this.autoRotateDirection?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=e*t/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.01||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(this._updateDistanceOrSize(Math.min(t,50)),this._updatePan(Math.min(t,50)),this._updateRotate(Math.min(t,50)),this._updateTransform(),this.target.update(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(t){var e=this._rotateVelocity;this._phi=e.y*t/20+this._phi,this._theta=e.x*t/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(e,this.damping)},_updateDistanceOrSize:function(t){this._setDistance(this._distance+this._zoomSpeed*t/20),this.target instanceof Rn||this._setOrthoSize(this._orthoSize+this._zoomSpeed*t/20),this._zoomSpeed*=Math.pow(this.damping,t/16)},_setDistance:function(t){
-this._distance=Math.max(Math.min(t,this.maxDistance),this.minDistance)},_setOrthoSize:function(t){this._orthoSize=Math.max(Math.min(t,this.maxOrthographicSize),this.minOrthographicSize);var e=this.target,r=this._orthoSize,n=r*this.orthographicAspect;e.left=-n/2,e.right=n/2,e.top=r/2,e.bottom=-r/2},_updatePan:function(t){var e=this._panVelocity,r=this._distance,n=this.target,i=n.worldTransform.y,a=n.worldTransform.x;this._center.scaleAndAdd(a,-e.x*r/200).scaleAndAdd(i,-e.y*r/200),this._vectorDamping(e,0),e.x=e.y=0},_updateTransform:function(){var t=this.target,e=new Cr,r=this._theta+Math.PI/2,n=this._phi+Math.PI/2,i=Math.sin(r);e.x=i*Math.cos(n),e.y=-Math.cos(r),e.z=i*Math.sin(n),t.position.copy(this._center).scaleAndAdd(e,this._distance),t.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var t=this.autoRotateAfterStill,e=this;!isNaN(t)&&t>0&&(this._stillTimeout=setTimeout(function(){e._rotating=!0},1e3*t))},_vectorDamping:function(t,e){var r=t.len();r*=e,r<1e-4&&(r=0),t.normalize().scale(r)},decomposeTransform:function(){if(this.target){this.target.updateWorldTransform();var t=this.target.worldTransform.z,e=Math.asin(t.y),r=Math.atan2(t.x,t.z);this._theta=e,this._phi=-r,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this._setDistance(this.target.position.dist(this._center)),this.target instanceof Rn||this._setOrthoSize(this.target.top-this.target.bottom)}},_mouseDownHandler:function(t){if(!this._isAnimating()){var e=t.clientX,r=t.clientY;if(t.targetTouches){var n=t.targetTouches[0];e=n.clientX,r=n.clientY,this._mode="rotate",this._processGesture(t,"start")}else t.button===ja[this.rotateMouseButton]?this._mode="rotate":t.button===ja[this.panMouseButton]?(this._mode="pan",t.preventDefault()):this._mode=null;var i=this.domElement;Ve.addEventListener(i,"touchmove",this._mouseMoveHandler),Ve.addEventListener(i,"touchend",this._mouseUpHandler),Ve.addEventListener(i,"mousemove",this._mouseMoveHandler),Ve.addEventListener(i,"mouseup",this._mouseUpHandler),Ve.addEventListener(i,"mouseout",this._mouseUpHandler),this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=e,this._mouseY=r}},_mouseMoveHandler:function(t){if(!this._isAnimating()){var e,r=t.clientX,n=t.clientY;if(t.targetTouches){var i=t.targetTouches[0];r=i.clientX,n=i.clientY,e=this._processGesture(t,"change")}var a=ce(this.panSensitivity),o=ce(this.rotateSensitivity);e||("rotate"===this._mode?(this._rotateVelocity.y+=(r-this._mouseX)/this.domElement.clientWidth*2*o[0],this._rotateVelocity.x+=(n-this._mouseY)/this.domElement.clientHeight*2*o[1]):"pan"===this._mode&&(this._panVelocity.x+=(r-this._mouseX)/this.domElement.clientWidth*a[0]*400,this._panVelocity.y+=(-n+this._mouseY)/this.domElement.clientHeight*a[1]*400)),this._mouseX=r,this._mouseY=n,t.preventDefault&&t.preventDefault()}},_mouseWheelHandler:function(t){if(!this._isAnimating()){var e=t.deltaY;0!==e&&this._zoomHandler(t,e>0?1:-1)}},_pinchHandler:function(t){this._isAnimating()||this._zoomHandler(t,t.pinchScale>1?.4:-.4)},_zoomHandler:function(t,e){var r;r=this.target instanceof Rn?Math.max(Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance))/20,.5):Math.max(Math.max(Math.min(this._orthoSize-this.minOrthographicSize,this.maxOrthographicSize-this._orthoSize))/20,.5),this._zoomSpeed=(e>0?-1:1)*r*this.zoomSensitivity,this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),t.preventDefault&&t.preventDefault()},_mouseUpHandler:function(t){var e=this.domElement;Ve.removeEventListener(e,"touchmove",this._mouseMoveHandler),Ve.removeEventListener(e,"touchend",this._mouseUpHandler),Ve.removeEventListener(e,"mousemove",this._mouseMoveHandler),Ve.removeEventListener(e,"mouseup",this._mouseUpHandler),Ve.removeEventListener(e,"mouseout",this._mouseUpHandler),this._processGesture(t,"end")},_addAnimator:function(t){var e=this._animators;return e.push(t),t.done(function(){var r=e.indexOf(t);r>=0&&e.splice(r,1)}),t},_processGesture:function(t,e){var r=this._gestureMgr;"start"===e&&r.clear();var n=r.recognize(t,null,this.domElement);if("end"===e&&r.clear(),n){var i=n.type;t.gestureEvent=i,this._pinchHandler(n.event)}return n}});Object.defineProperty(qa.prototype,"autoRotate",{get:function(){return this._autoRotate},set:function(t){this._autoRotate=t,this._rotating=t}}),Object.defineProperty(qa.prototype,"target",{get:function(){return this._target},set:function(t){t&&t.target&&this.setCenter(t.target.toArray()),this._target=t,this.decomposeTransform()}});var Ya=pn.extend({dynamic:!1}),Ka={merge:function(t,e){if(t.length){var r=t[0],n=r.geometry,i=r.material,a=new pn({dynamic:!1});a.boundingBox=new Vr;for(var o=n.getEnabledAttributes(),s=0;s<o.length;s++){var u=o[s],l=n.attributes[u];a.attributes[u]||(a.attributes[u]=l.clone(!1))}for(var h=Er.create(),c=0,f=0,d=0;d<t.length;d++){var p=t[d].geometry;p.boundingBox&&(p.boundingBox.applyTransform(e?t[d].worldTransform:t[d].localTransform),a.boundingBox.union(p.boundingBox)),c+=p.vertexCount,f+=p.triangleCount}for(var m=0;m<o.length;m++){var u=o[m];a.attributes[u].init(c)}a.indices=c>=65535?new Uint32Array(3*f):new Uint16Array(3*f);for(var _=0,g=0,v=n.isUseIndices(),y=0;y<t.length;y++){var T=t[y],p=T.geometry,c=p.vertexCount,x=e?T.worldTransform.array:T.localTransform.array;Er.invert(h,x),Er.transpose(h,h);for(var E=0;E<o.length;E++){var u=o[E],A=p.attributes[u],b=a.attributes[u];if(A.value.length){for(var S=A.value.length,M=A.size,w=_*M,C=S/M,s=0;s<S;s++)b.value[w+s]=A.value[s];"position"===u?Ce.forEach(b.value,M,w,C,Ce.transformMat4,x):"normal"!==u&&"tangent"!==u||Ce.forEach(b.value,M,w,C,Ce.transformMat4,h)}}if(v){for(var S=p.indices.length,s=0;s<S;s++)a.indices[s+g]=p.indices[s]+_;g+=S}_+=c}return new Cn({material:i,geometry:a})}},splitByJoints:function(t,e,r){var n=t.geometry,i=t.skeleton,a=t.material,o=t.joints;if(n&&i&&o.length){if(o.length<e)return t;for(var s=n.indices,u=n.triangleCount,l=u,h=[],c=n.attributes.joint.value,f=0;f<u;f++)h[f]=!1;for(var d=[],p=[],m=function(t){return o[t]};l>0;){for(var _=[],g=[],v=[],y=0,f=0;f<o.length;f++)g[f]=-1;for(var T=0;T<u;T++)if(!h[T]){for(var x=!0,E=0,f=0;f<3;f++)for(var A=s[3*T+f],b=0;b<4;b++){var S=c[4*A+b];S>=0&&-1===g[S]&&(y<e?(g[S]=y,v[y++]=S,d[E++]=S):x=!1)}if(x)_.push(s.subarray(3*T,3*(T+1))),h[T]=!0,l--;else for(var f=0;f<E;f++)g[d[f]]=-1,v.pop(),y--}p.push({triangles:_,joints:v.map(m),jointReverseMap:g})}var M=new zr({name:t.name}),w=n.getEnabledAttributes();w.splice(w.indexOf("joint"),1);for(var C=[],R=0;R<p.length;R++){for(var L=p[R],N=L.jointReverseMap,y=L.joints.length,P=new pn,I=new Cn({name:[t.name,f].join("-"),material:a,geometry:P,skeleton:i,joints:L.joints.slice()}),O=0,D=n.vertexCount,f=0;f<D;f++)C[f]=-1;for(var T=0;T<L.triangles.length;T++)for(var B=L.triangles[T],f=0;f<3;f++){var A=B[f];-1===C[A]&&(C[A]=O,O++)}for(var U=0;U<w.length;U++){var F=w[U],k=P.attributes[F];k.init(O)}P.attributes.joint.value=new Float32Array(4*O),P.indices=O>65535?new Uint32Array(3*L.triangles.length):new Uint16Array(3*L.triangles.length);var H=0;O=0;for(var f=0;f<D;f++)C[f]=-1;for(var T=0;T<L.triangles.length;T++)for(var G=L.triangles[T],f=0;f<3;f++){var A=G[f];if(-1===C[A]){C[A]=O;for(var U=0;U<w.length;U++)for(var F=w[U],V=n.attributes[F],k=P.attributes[F],W=V.size,b=0;b<W;b++)k.value[O*W+b]=V.value[A*W+b];for(var b=0;b<4;b++){var S=n.attributes.joint.value[4*A+b],z=4*O+b;P.attributes.joint.value[z]=S>=0?N[S]:-1}O++}P.indices[H++]=C[A]}P.updateBoundingBox(),M.add(I)}for(var X=t.children(),f=0;f<X.length;f++)M.add(X[f]);if(M.position.copy(t.position),M.rotation.copy(t.rotation),M.scale.copy(t.scale),r&&t.getParent()){var j=t.getParent();j.remove(t),j.add(M)}return M}}},Za={version:1,type:"Geometry",generator:"util.transferable.toObject"},Ja={toObject:function(t,e){if(!t)return null;var r={metadata:Fe.extend({},Za)},n=[];r.dynamic=t.dynamic,t.boundingBox&&(r.boundingBox={min:t.boundingBox.min.toArray(),max:t.boundingBox.max.toArray()}),t.indices&&t.indices.length>0&&(r.indices=de(t.indices,e),n.push(r.indices.buffer)),r.attributes={};for(var i in t.attributes)if(t.attributes.hasOwnProperty(i)){var a=t.attributes[i];a&&a.value&&a.value.length>0&&(a=r.attributes[i]=fe(a,e),n.push(a.value.buffer))}return{data:r,buffers:n}},toGeometry:function(t){if(!t)return null;if(t.data&&t.buffers)return Ja.toGeometry(t.data);if(!t.metadata||t.metadata.generator!==Za.generator)throw new Error("[util.transferable.toGeometry] the object is not generated by util.transferable.");var e={dynamic:t.dynamic,indices:t.indices};if(t.boundingBox){var r=(new Cr).setArray(t.boundingBox.min),n=(new Cr).setArray(t.boundingBox.max);e.boundingBox=new Vr(r,n)}var i=new pn(e);for(var a in t.attributes)if(t.attributes.hasOwnProperty(a)){var o=t.attributes[a];i.attributes[a]=new pn.Attribute(o.name,o.type,o.size,o.semantic),i.attributes[a].value=o.value}return i}};Q.import("@export clay.vr.disorter.output.vertex\nattribute vec2 texcoord: TEXCOORD_0;\nattribute vec3 position: POSITION;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n v_Texcoord = texcoord;\n gl_Position = vec4(position.xy, 0.5, 1.0);\n}\n@end\n@export clay.vr.disorter.output.fragment\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n gl_FragColor = texture2D(texture, v_Texcoord);\n}\n@end");var Qa=ke.extend(function(){return{clearColor:[0,0,0,1],_mesh:new Cn({geometry:new pn({dynamic:!0}),culling:!1,material:new nr({depthTest:!1,shader:new Q({vertex:Q.source("clay.vr.disorter.output.vertex"),fragment:Q.source("clay.vr.disorter.output.fragment")})})}),_fakeCamera:new Rn}},{render:function(t,e){var r=this.clearColor,n=t.gl;n.clearColor(r[0],r[1],r[2],r[3]),n.clear(n.COLOR_BUFFER_BIT),n.disable(n.BLEND),this._mesh.material.set("texture",e),t.saveViewport(),t.setViewport(0,0,t.getWidth(),t.getHeight()),t.renderPass([this._mesh],this._fakeCamera),t.restoreViewport()},updateFromVRDisplay:function(t){t.deviceInfo_?this._updateMesh(20,20,t.deviceInfo_):console.warn("Cant get vrDisplay.deviceInfo_, seems code changed")},_updateMesh:function(t,e,r){var n=this._mesh.geometry.attributes.position,i=this._mesh.geometry.attributes.texcoord0;n.init(2*t*e),i.init(2*t*e);for(var a=r.getLeftEyeVisibleTanAngles(),o=r.getLeftEyeNoLensTanAngles(),s=r.getLeftEyeVisibleScreenRect(o),u=0,l=[],h=[],c=0;c<2;c++){for(var f=0;f<e;f++)for(var d=0;d<t;d++,u++){var p=d/(t-1),m=f/(e-1),_=p,g=m,v=pe(a[0],a[2],p),y=pe(a[3],a[1],m),T=Math.sqrt(v*v+y*y),x=r.distortion.distortInverse(T),E=v*x/T,A=y*x/T;p=(E-o[0])/(o[2]-o[0]),m=(A-o[3])/(o[1]-o[3]),p=2*(s.x+p*s.width-.5),m=2*(s.y+m*s.height-.5),l[0]=p,l[1]=m,l[2]=0,h[0]=.5*_+.5*c,h[1]=g,n.set(u,l),i.set(u,h)}var b=a[2]-a[0];a[0]=-(b+a[0]),a[2]=b-a[2],b=o[2]-o[0],o[0]=-(b+o[0]),o[2]=b-o[2],s.x=1-(s.x+s.width)}for(var S=new Uint16Array(2*(t-1)*(e-1)*6),M=t/2,w=e/2,u=0,C=0,c=0;c<2;c++)for(var f=0;f<e;f++)for(var d=0;d<t;d++,u++)0!==d&&0!==f&&(d<=M==f<=w?(S[C++]=u,S[C++]=u-t-1,S[C++]=u-t,S[C++]=u-t-1,S[C++]=u,S[C++]=u-1):(S[C++]=u-1,S[C++]=u-t,S[C++]=u,S[C++]=u-t,S[C++]=u-1,S[C++]=u-t-1));this._mesh.geometry.indices=S,this._mesh.geometry.dirty()}}),$a=new Ur,to=zr.extend(function(){return{aspect:.5,_leftCamera:new Rn,_rightCamera:new Rn,_eyeLeft:new Ur,_eyeRight:new Ur,_frameData:null}},{updateFromCamera:function(t,e,r,n){t.transformNeedsUpdate()&&console.warn("Node transform is not updated"),e=null==e?10:e,r=null==r?1:r,n=null==n?.064:n;var i=t.fov,a=t.aspect*this.aspect,o=t.near;$a.copy(t.projectionMatrix);var s,u,n=n/2,l=n*o/e,h=o*Math.tan(Math.PI/180*i*.5)/r;this._eyeLeft.array[12]=-n,this._eyeRight.array[12]=n,s=-h*a+l,u=h*a+l,$a.array[0]=2*o/(u-s),$a.array[8]=(u+s)/(u-s),this._leftCamera.projectionMatrix.copy($a),s=-h*a-l,u=h*a-l,$a.array[0]=2*o/(u-s),$a.array[8]=(u+s)/(u-s),this._rightCamera.projectionMatrix.copy($a),this._leftCamera.worldTransform.copy(t.worldTransform).multiply(this._eyeLeft),this._rightCamera.worldTransform.copy(t.worldTransform).multiply(this._eyeRight),this._leftCamera.decomposeWorldTransform(),this._leftCamera.decomposeProjectionMatrix(),this._rightCamera.decomposeWorldTransform(),this._rightCamera.decomposeProjectionMatrix()},updateFromVRDisplay:function(t,e){if("undefined"!=typeof VRFrameData){var r=this._frameData||(this._frameData=new VRFrameData);t.getFrameData(r);var n=this._leftCamera,i=this._rightCamera;n.projectionMatrix.setArray(r.leftProjectionMatrix),n.decomposeProjectionMatrix(),n.viewMatrix.setArray(r.leftViewMatrix),n.setViewMatrix(n.viewMatrix),i.projectionMatrix.setArray(r.rightProjectionMatrix),i.decomposeProjectionMatrix(),i.viewMatrix.setArray(r.rightViewMatrix),i.setViewMatrix(i.viewMatrix),e&&e.worldTransform&&(e.transformNeedsUpdate()&&console.warn("Node transform is not updated"),n.worldTransform.multiplyLeft(e.worldTransform),n.decomposeWorldTransform(),i.worldTransform.multiplyLeft(e.worldTransform),i.decomposeWorldTransform())}},getLeftCamera:function(){return this._leftCamera},getRightCamera:function(){return this._rightCamera}}),eo={Animator:d,Blend1DClip:ye,Blend2DClip:we,Clip:_e,easing:me,SamplerTrack:Pe,Timeline:ze,TrackClip:Xe},ro={Task:jt,TaskGroup:ki},no={Orthographic:Ln,Perspective:Rn},io={Compositor:Wi,CompositorNode:Gi,createCompositor:Kt,FilterNode:ji,Graph:Vi,Pass:hi,SceneNode:zi,TextureNode:Xi,TexturePool:wi},ao={Base:ke,Cache:un,color:Je,glenum:Ye,GLInfo:S,LinkedList:Ke,LRU:Ze,mixin:{extend:Ie,notifier:Oe},request:Ge,util:Fe,vendor:Ve},oo={GBuffer:sa,Renderer:ha},so={glmatrix:da},uo={Cone:ua,Cube:gn,Cylinder:la,ParametricSurface:yn,Plane:mn,Sphere:vn},lo={Ambient:ei,AmbientCubemap:Si,AmbientSH:Mi,Directional:Qn,Point:$n,Sphere:_a,Spot:ti,Tube:ga},ho={FX:va,GLTF:Jn},co={BoundingBox:Vr,Frustum:tn,Matrix2:ya,Matrix2d:Ta,Matrix3:xa,Matrix4:Ur,Plane:Yr,Quaternion:Or,Ray:en,util:xn,Value:Ea,Vector2:Se,Vector3:Cr,Vector4:Ca},fo={Emitter:Pa,Field:Ia,ForceField:Oa,Particle:Na,ParticleRenderable:Ba},po={PixelPicking:Ua,RayPicking:Pi},mo={FreeControl:ka,GamepadControl:Ha,GestureMgr:Ga,InfinitePlane:Xa,OrbitControl:qa,Skybox:ci,Skydome:ci},_o={EnvironmentMap:di,ShadowMap:Ni},go={library:Gn,registerBuiltinCompositor:Yt,source:{header:{light:jr}}},vo={cubemap:Ai,dds:gi,delaunay:xe,hdr:xi,mesh:Ka,sh:Ii,texture:Ei,transferable:Ja},yo={CardboardDistorter:Qa,StereoCamera:to};t.animation=eo,t.application=Fi,t.async=ro,t.Camera=rn,t.camera=no,t.compositor=io,t.core=ao,t.createCompositor=Kt,t.deferred=oo,t.dep=so,t.FrameBuffer=oi,t.Geometry=pn,t.geometry=uo,t.GeometryBase=ln,t.InstancedMesh=ma,t.Joint=Vn,t.Light=qr,t.light=lo,t.loader=ho,t.Material=nr,t.math=co,t.BoundingBox=Vr,t.Frustum=tn,t.Matrix2=ya,t.Matrix2d=Ta,t.Matrix3=xa,t.Matrix4=Ur,t.Plane=Yr,t.Quaternion=Or,t.Ray=en,t.Value=Ea,t.Vector2=Se,t.Vector3=Cr,t.Vector4=Ca,t.Mesh=Cn,t.Node=zr,t.particle=fo,t.picking=po,t.plugin=mo,t.prePass=_o,t.Renderable=wn,t.Renderer=Mr,t.Scene=sn,t.Shader=Q,t.shader=go,t.Skeleton=Xn,t.StandardMaterial=Fn,t.StaticGeometry=Ya,t.Texture=Tn,t.Texture2D=An,t.TextureCube=Mn,t.Timeline=ze,t.util=vo,t.version="1.3.0",t.vr=yo,Object.defineProperty(t,"__esModule",{value:!0})});
+this._distance=Math.max(Math.min(t,this.maxDistance),this.minDistance)},_setOrthoSize:function(t){this._orthoSize=Math.max(Math.min(t,this.maxOrthographicSize),this.minOrthographicSize);var e=this.target,r=this._orthoSize,n=r*this.orthographicAspect;e.left=-n/2,e.right=n/2,e.top=r/2,e.bottom=-r/2},_updatePan:function(t){var e=this._panVelocity,r=this._distance,n=this.target,i=n.worldTransform.y,a=n.worldTransform.x;this._center.scaleAndAdd(a,-e.x*r/200).scaleAndAdd(i,-e.y*r/200),this._vectorDamping(e,0),e.x=e.y=0},_updateTransform:function(){var t=this.target,e=new Cr,r=this._theta+Math.PI/2,n=this._phi+Math.PI/2,i=Math.sin(r);e.x=i*Math.cos(n),e.y=-Math.cos(r),e.z=i*Math.sin(n),t.position.copy(this._center).scaleAndAdd(e,this._distance),t.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var t=this.autoRotateAfterStill,e=this;!isNaN(t)&&t>0&&(this._stillTimeout=setTimeout(function(){e._rotating=!0},1e3*t))},_vectorDamping:function(t,e){var r=t.len();r*=e,r<1e-4&&(r=0),t.normalize().scale(r)},decomposeTransform:function(){if(this.target){this.target.updateWorldTransform();var t=this.target.worldTransform.z,e=Math.asin(t.y),r=Math.atan2(t.x,t.z);this._theta=e,this._phi=-r,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this._setDistance(this.target.position.dist(this._center)),this.target instanceof Rn||this._setOrthoSize(this.target.top-this.target.bottom)}},_mouseDownHandler:function(t){if(!this._isAnimating()){var e=t.clientX,r=t.clientY;if(t.targetTouches){var n=t.targetTouches[0];e=n.clientX,r=n.clientY,this._mode="rotate",this._processGesture(t,"start")}else t.button===ja[this.rotateMouseButton]?this._mode="rotate":t.button===ja[this.panMouseButton]?(this._mode="pan",t.preventDefault()):this._mode=null;var i=this.domElement;Ve.addEventListener(i,"touchmove",this._mouseMoveHandler),Ve.addEventListener(i,"touchend",this._mouseUpHandler),Ve.addEventListener(i,"mousemove",this._mouseMoveHandler),Ve.addEventListener(i,"mouseup",this._mouseUpHandler),Ve.addEventListener(i,"mouseout",this._mouseUpHandler),this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=e,this._mouseY=r}},_mouseMoveHandler:function(t){if(!this._isAnimating()){var e,r=t.clientX,n=t.clientY;if(t.targetTouches){var i=t.targetTouches[0];r=i.clientX,n=i.clientY,e=this._processGesture(t,"change")}var a=ce(this.panSensitivity),o=ce(this.rotateSensitivity);e||("rotate"===this._mode?(this._rotateVelocity.y+=(r-this._mouseX)/this.domElement.clientWidth*2*o[0],this._rotateVelocity.x+=(n-this._mouseY)/this.domElement.clientHeight*2*o[1]):"pan"===this._mode&&(this._panVelocity.x+=(r-this._mouseX)/this.domElement.clientWidth*a[0]*400,this._panVelocity.y+=(-n+this._mouseY)/this.domElement.clientHeight*a[1]*400)),this._mouseX=r,this._mouseY=n,t.preventDefault&&t.preventDefault()}},_mouseWheelHandler:function(t){if(!this._isAnimating()){var e=t.deltaY;0!==e&&this._zoomHandler(t,e>0?1:-1)}},_pinchHandler:function(t){this._isAnimating()||this._zoomHandler(t,t.pinchScale>1?.4:-.4)},_zoomHandler:function(t,e){var r;r=this.target instanceof Rn?Math.max(Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance))/20,.5):Math.max(Math.max(Math.min(this._orthoSize-this.minOrthographicSize,this.maxOrthographicSize-this._orthoSize))/20,.5),this._zoomSpeed=(e>0?-1:1)*r*this.zoomSensitivity,this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),t.preventDefault&&t.preventDefault()},_mouseUpHandler:function(t){var e=this.domElement;Ve.removeEventListener(e,"touchmove",this._mouseMoveHandler),Ve.removeEventListener(e,"touchend",this._mouseUpHandler),Ve.removeEventListener(e,"mousemove",this._mouseMoveHandler),Ve.removeEventListener(e,"mouseup",this._mouseUpHandler),Ve.removeEventListener(e,"mouseout",this._mouseUpHandler),this._processGesture(t,"end")},_addAnimator:function(t){var e=this._animators;return e.push(t),t.done(function(){var r=e.indexOf(t);r>=0&&e.splice(r,1)}),t},_processGesture:function(t,e){var r=this._gestureMgr;"start"===e&&r.clear();var n=r.recognize(t,null,this.domElement);if("end"===e&&r.clear(),n){var i=n.type;t.gestureEvent=i,this._pinchHandler(n.event)}return n}});Object.defineProperty(qa.prototype,"autoRotate",{get:function(){return this._autoRotate},set:function(t){this._autoRotate=t,this._rotating=t}}),Object.defineProperty(qa.prototype,"target",{get:function(){return this._target},set:function(t){t&&t.target&&this.setCenter(t.target.toArray()),this._target=t,this.decomposeTransform()}});var Ya=pn.extend({dynamic:!1}),Ka={merge:function(t,e){if(t.length){var r=t[0],n=r.geometry,i=r.material,a=new pn({dynamic:!1});a.boundingBox=new Vr;for(var o=n.getEnabledAttributes(),s=0;s<o.length;s++){var u=o[s],l=n.attributes[u];a.attributes[u]||(a.attributes[u]=l.clone(!1))}for(var h=Er.create(),c=0,f=0,d=0;d<t.length;d++){var p=t[d].geometry;p.boundingBox&&(p.boundingBox.applyTransform(e?t[d].worldTransform:t[d].localTransform),a.boundingBox.union(p.boundingBox)),c+=p.vertexCount,f+=p.triangleCount}for(var m=0;m<o.length;m++){var u=o[m];a.attributes[u].init(c)}a.indices=c>=65535?new Uint32Array(3*f):new Uint16Array(3*f);for(var _=0,g=0,v=n.isUseIndices(),y=0;y<t.length;y++){var T=t[y],p=T.geometry,c=p.vertexCount,x=e?T.worldTransform.array:T.localTransform.array;Er.invert(h,x),Er.transpose(h,h);for(var E=0;E<o.length;E++){var u=o[E],A=p.attributes[u],b=a.attributes[u];if(A.value.length){for(var S=A.value.length,M=A.size,w=_*M,C=S/M,s=0;s<S;s++)b.value[w+s]=A.value[s];"position"===u?Ce.forEach(b.value,M,w,C,Ce.transformMat4,x):"normal"!==u&&"tangent"!==u||Ce.forEach(b.value,M,w,C,Ce.transformMat4,h)}}if(v){for(var S=p.indices.length,s=0;s<S;s++)a.indices[s+g]=p.indices[s]+_;g+=S}_+=c}return new Cn({material:i,geometry:a})}},splitByJoints:function(t,e,r){var n=t.geometry,i=t.skeleton,a=t.material,o=t.joints;if(n&&i&&o.length){if(o.length<e)return t;for(var s=n.indices,u=n.triangleCount,l=u,h=[],c=n.attributes.joint.value,f=0;f<u;f++)h[f]=!1;for(var d=[],p=[],m=function(t){return o[t]};l>0;){for(var _=[],g=[],v=[],y=0,f=0;f<o.length;f++)g[f]=-1;for(var T=0;T<u;T++)if(!h[T]){for(var x=!0,E=0,f=0;f<3;f++)for(var A=s[3*T+f],b=0;b<4;b++){var S=c[4*A+b];S>=0&&-1===g[S]&&(y<e?(g[S]=y,v[y++]=S,d[E++]=S):x=!1)}if(x)_.push(s.subarray(3*T,3*(T+1))),h[T]=!0,l--;else for(var f=0;f<E;f++)g[d[f]]=-1,v.pop(),y--}p.push({triangles:_,joints:v.map(m),jointReverseMap:g})}var M=new zr({name:t.name}),w=n.getEnabledAttributes();w.splice(w.indexOf("joint"),1);for(var C=[],R=0;R<p.length;R++){for(var L=p[R],N=L.jointReverseMap,y=L.joints.length,P=new pn,I=new Cn({name:[t.name,f].join("-"),material:a,geometry:P,skeleton:i,joints:L.joints.slice()}),O=0,D=n.vertexCount,f=0;f<D;f++)C[f]=-1;for(var T=0;T<L.triangles.length;T++)for(var B=L.triangles[T],f=0;f<3;f++){var A=B[f];-1===C[A]&&(C[A]=O,O++)}for(var U=0;U<w.length;U++){var F=w[U],k=P.attributes[F];k.init(O)}P.attributes.joint.value=new Float32Array(4*O),P.indices=O>65535?new Uint32Array(3*L.triangles.length):new Uint16Array(3*L.triangles.length);var H=0;O=0;for(var f=0;f<D;f++)C[f]=-1;for(var T=0;T<L.triangles.length;T++)for(var G=L.triangles[T],f=0;f<3;f++){var A=G[f];if(-1===C[A]){C[A]=O;for(var U=0;U<w.length;U++)for(var F=w[U],V=n.attributes[F],k=P.attributes[F],W=V.size,b=0;b<W;b++)k.value[O*W+b]=V.value[A*W+b];for(var b=0;b<4;b++){var S=n.attributes.joint.value[4*A+b],z=4*O+b;P.attributes.joint.value[z]=S>=0?N[S]:-1}O++}P.indices[H++]=C[A]}P.updateBoundingBox(),M.add(I)}for(var X=t.children(),f=0;f<X.length;f++)M.add(X[f]);if(M.position.copy(t.position),M.rotation.copy(t.rotation),M.scale.copy(t.scale),r&&t.getParent()){var j=t.getParent();j.remove(t),j.add(M)}return M}}},Za={version:1,type:"Geometry",generator:"util.transferable.toObject"},Ja={toObject:function(t,e){if(!t)return null;var r={metadata:Fe.extend({},Za)},n=[];r.dynamic=t.dynamic,t.boundingBox&&(r.boundingBox={min:t.boundingBox.min.toArray(),max:t.boundingBox.max.toArray()}),t.indices&&t.indices.length>0&&(r.indices=de(t.indices,e),n.push(r.indices.buffer)),r.attributes={};for(var i in t.attributes)if(t.attributes.hasOwnProperty(i)){var a=t.attributes[i];a&&a.value&&a.value.length>0&&(a=r.attributes[i]=fe(a,e),n.push(a.value.buffer))}return{data:r,buffers:n}},toGeometry:function(t){if(!t)return null;if(t.data&&t.buffers)return Ja.toGeometry(t.data);if(!t.metadata||t.metadata.generator!==Za.generator)throw new Error("[util.transferable.toGeometry] the object is not generated by util.transferable.");var e={dynamic:t.dynamic,indices:t.indices};if(t.boundingBox){var r=(new Cr).setArray(t.boundingBox.min),n=(new Cr).setArray(t.boundingBox.max);e.boundingBox=new Vr(r,n)}var i=new pn(e);for(var a in t.attributes)if(t.attributes.hasOwnProperty(a)){var o=t.attributes[a];i.attributes[a]=new pn.Attribute(o.name,o.type,o.size,o.semantic),i.attributes[a].value=o.value}return i}};Q.import("@export clay.vr.disorter.output.vertex\nattribute vec2 texcoord: TEXCOORD_0;\nattribute vec3 position: POSITION;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n v_Texcoord = texcoord;\n gl_Position = vec4(position.xy, 0.5, 1.0);\n}\n@end\n@export clay.vr.disorter.output.fragment\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n gl_FragColor = texture2D(texture, v_Texcoord);\n}\n@end");var Qa=ke.extend(function(){return{clearColor:[0,0,0,1],_mesh:new Cn({geometry:new pn({dynamic:!0}),culling:!1,material:new nr({depthTest:!1,shader:new Q({vertex:Q.source("clay.vr.disorter.output.vertex"),fragment:Q.source("clay.vr.disorter.output.fragment")})})}),_fakeCamera:new Rn}},{render:function(t,e){var r=this.clearColor,n=t.gl;n.clearColor(r[0],r[1],r[2],r[3]),n.clear(n.COLOR_BUFFER_BIT),n.disable(n.BLEND),this._mesh.material.set("texture",e),t.saveViewport(),t.setViewport(0,0,t.getWidth(),t.getHeight()),t.renderPass([this._mesh],this._fakeCamera),t.restoreViewport()},updateFromVRDisplay:function(t){t.deviceInfo_?this._updateMesh(20,20,t.deviceInfo_):console.warn("Cant get vrDisplay.deviceInfo_, seems code changed")},_updateMesh:function(t,e,r){var n=this._mesh.geometry.attributes.position,i=this._mesh.geometry.attributes.texcoord0;n.init(2*t*e),i.init(2*t*e);for(var a=r.getLeftEyeVisibleTanAngles(),o=r.getLeftEyeNoLensTanAngles(),s=r.getLeftEyeVisibleScreenRect(o),u=0,l=[],h=[],c=0;c<2;c++){for(var f=0;f<e;f++)for(var d=0;d<t;d++,u++){var p=d/(t-1),m=f/(e-1),_=p,g=m,v=pe(a[0],a[2],p),y=pe(a[3],a[1],m),T=Math.sqrt(v*v+y*y),x=r.distortion.distortInverse(T),E=v*x/T,A=y*x/T;p=(E-o[0])/(o[2]-o[0]),m=(A-o[3])/(o[1]-o[3]),p=2*(s.x+p*s.width-.5),m=2*(s.y+m*s.height-.5),l[0]=p,l[1]=m,l[2]=0,h[0]=.5*_+.5*c,h[1]=g,n.set(u,l),i.set(u,h)}var b=a[2]-a[0];a[0]=-(b+a[0]),a[2]=b-a[2],b=o[2]-o[0],o[0]=-(b+o[0]),o[2]=b-o[2],s.x=1-(s.x+s.width)}for(var S=new Uint16Array(2*(t-1)*(e-1)*6),M=t/2,w=e/2,u=0,C=0,c=0;c<2;c++)for(var f=0;f<e;f++)for(var d=0;d<t;d++,u++)0!==d&&0!==f&&(d<=M==f<=w?(S[C++]=u,S[C++]=u-t-1,S[C++]=u-t,S[C++]=u-t-1,S[C++]=u,S[C++]=u-1):(S[C++]=u-1,S[C++]=u-t,S[C++]=u,S[C++]=u-t,S[C++]=u-1,S[C++]=u-t-1));this._mesh.geometry.indices=S,this._mesh.geometry.dirty()}}),$a=new Ur,to=zr.extend(function(){return{aspect:.5,_leftCamera:new Rn,_rightCamera:new Rn,_eyeLeft:new Ur,_eyeRight:new Ur,_frameData:null}},{updateFromCamera:function(t,e,r,n){t.transformNeedsUpdate()&&console.warn("Node transform is not updated"),e=null==e?10:e,r=null==r?1:r,n=null==n?.064:n;var i=t.fov,a=t.aspect*this.aspect,o=t.near;$a.copy(t.projectionMatrix);var s,u,n=n/2,l=n*o/e,h=o*Math.tan(Math.PI/180*i*.5)/r;this._eyeLeft.array[12]=-n,this._eyeRight.array[12]=n,s=-h*a+l,u=h*a+l,$a.array[0]=2*o/(u-s),$a.array[8]=(u+s)/(u-s),this._leftCamera.projectionMatrix.copy($a),s=-h*a-l,u=h*a-l,$a.array[0]=2*o/(u-s),$a.array[8]=(u+s)/(u-s),this._rightCamera.projectionMatrix.copy($a),this._leftCamera.worldTransform.copy(t.worldTransform).multiply(this._eyeLeft),this._rightCamera.worldTransform.copy(t.worldTransform).multiply(this._eyeRight),this._leftCamera.decomposeWorldTransform(),this._leftCamera.decomposeProjectionMatrix(),this._rightCamera.decomposeWorldTransform(),this._rightCamera.decomposeProjectionMatrix()},updateFromVRDisplay:function(t,e){if("undefined"!=typeof VRFrameData){var r=this._frameData||(this._frameData=new VRFrameData);t.getFrameData(r);var n=this._leftCamera,i=this._rightCamera;n.projectionMatrix.setArray(r.leftProjectionMatrix),n.decomposeProjectionMatrix(),n.viewMatrix.setArray(r.leftViewMatrix),n.setViewMatrix(n.viewMatrix),i.projectionMatrix.setArray(r.rightProjectionMatrix),i.decomposeProjectionMatrix(),i.viewMatrix.setArray(r.rightViewMatrix),i.setViewMatrix(i.viewMatrix),e&&e.worldTransform&&(e.transformNeedsUpdate()&&console.warn("Node transform is not updated"),n.worldTransform.multiplyLeft(e.worldTransform),n.decomposeWorldTransform(),i.worldTransform.multiplyLeft(e.worldTransform),i.decomposeWorldTransform())}},getLeftCamera:function(){return this._leftCamera},getRightCamera:function(){return this._rightCamera}}),eo={Animator:d,Blend1DClip:ye,Blend2DClip:we,Clip:_e,easing:me,SamplerTrack:Pe,Timeline:ze,TrackClip:Xe},ro={Task:jt,TaskGroup:ki},no={Orthographic:Ln,Perspective:Rn},io={Compositor:Wi,CompositorNode:Gi,createCompositor:Kt,FilterNode:ji,Graph:Vi,Pass:hi,SceneNode:zi,TextureNode:Xi,TexturePool:wi},ao={Base:ke,Cache:un,color:Je,glenum:Ye,GLInfo:S,LinkedList:Ke,LRU:Ze,mixin:{extend:Ie,notifier:Oe},request:Ge,util:Fe,vendor:Ve},oo={GBuffer:sa,Renderer:ha},so={glmatrix:da},uo={Cone:ua,Cube:gn,Cylinder:la,ParametricSurface:yn,Plane:mn,Sphere:vn},lo={Ambient:ei,AmbientCubemap:Si,AmbientSH:Mi,Directional:Qn,Point:$n,Sphere:_a,Spot:ti,Tube:ga},ho={FX:va,GLTF:Jn},co={BoundingBox:Vr,Frustum:tn,Matrix2:ya,Matrix2d:Ta,Matrix3:xa,Matrix4:Ur,Plane:Yr,Quaternion:Or,Ray:en,util:xn,Value:Ea,Vector2:Se,Vector3:Cr,Vector4:Ca},fo={Emitter:Pa,Field:Ia,ForceField:Oa,Particle:Na,ParticleRenderable:Ba},po={PixelPicking:Ua,RayPicking:Pi},mo={FreeControl:ka,GamepadControl:Ha,GestureMgr:Ga,InfinitePlane:Xa,OrbitControl:qa,Skybox:ci,Skydome:ci},_o={EnvironmentMap:di,ShadowMap:Ni},go={library:Gn,registerBuiltinCompositor:Yt,source:{header:{light:jr}}},vo={cubemap:Ai,dds:gi,delaunay:xe,hdr:xi,mesh:Ka,sh:Ii,texture:Ei,transferable:Ja},yo={CardboardDistorter:Qa,StereoCamera:to},scc=function(c){Ve.createCanvas=c;},t.animation=eo,t.application=Fi,t.async=ro,t.Camera=rn,t.camera=no,t.compositor=io,t.core=ao,t.createCompositor=Kt,t.deferred=oo,t.dep=so,t.FrameBuffer=oi,t.Geometry=pn,t.geometry=uo,t.GeometryBase=ln,t.InstancedMesh=ma,t.Joint=Vn,t.Light=qr,t.light=lo,t.loader=ho,t.Material=nr,t.math=co,t.BoundingBox=Vr,t.Frustum=tn,t.Matrix2=ya,t.Matrix2d=Ta,t.Matrix3=xa,t.Matrix4=Ur,t.Plane=Yr,t.Quaternion=Or,t.Ray=en,t.Value=Ea,t.Vector2=Se,t.Vector3=Cr,t.Vector4=Ca,t.Mesh=Cn,t.Node=zr,t.particle=fo,t.picking=po,t.plugin=mo,t.prePass=_o,t.Renderable=wn,t.Renderer=Mr,t.Scene=sn,t.Shader=Q,t.shader=go,t.Skeleton=Xn,t.StandardMaterial=Fn,t.StaticGeometry=Ya,t.Texture=Tn,t.Texture2D=An,t.TextureCube=Mn,t.Timeline=ze,t.util=vo,t.version="1.3.0",t.vr=yo,t.setCanvasCreator=scc,Object.defineProperty(t,"__esModule",{value:!0})});
diff --git a/node_modules/claygl/src/Renderer.js b/node_modules/claygl/src/Renderer.js
index 829d834..681420f 100644
--- a/node_modules/claygl/src/Renderer.js
+++ b/node_modules/claygl/src/Renderer.js
@@ -59,7 +59,7 @@ function PlaceHolderTexture(renderer) {
     this.bind = function (renderer) {
         if (!blankCanvas) {
             // TODO Environment not support createCanvas.
-            blankCanvas = vendor.createCanvas();
+            blankCanvas = document.createElement("canvas");
             blankCanvas.width = blankCanvas.height = 1;
             blankCanvas.getContext('2d');
         }
diff --git a/node_modules/claygl/src/claygl.js b/node_modules/claygl/src/claygl.js
index 4a75d3f..cfe8293 100644
--- a/node_modules/claygl/src/claygl.js
+++ b/node_modules/claygl/src/claygl.js
@@ -363,4 +363,8 @@ var vr = {
     StereoCamera : StereoCamera$118
 };
 export { vr };
+
+export function setCanvasCreator(creator) {
+    vendor$34.createCanvas = creator;
+}
 ;
